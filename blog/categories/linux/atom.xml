<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Living a Simple Life is a Happy Life]]></title>
  <link href="http://happy123.me/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://happy123.me/"/>
  <updated>2018-06-11T08:17:37+08:00</updated>
  <id>http://happy123.me/</id>
  <author>
    <name><![CDATA[memoryboxes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrate Firewalld to Iptables on Centos7]]></title>
    <link href="http://happy123.me/blog/2017/12/06/migrate-firewalld-to-iptables-on-centos7/"/>
    <updated>2017-12-06T16:23:22+08:00</updated>
    <id>http://happy123.me/blog/2017/12/06/migrate-firewalld-to-iptables-on-centos7</id>
    <content type="html"><![CDATA[<h2>关闭 FireWall</h2>

<pre><code>systemctl stop firewalld.service #停止firewall
systemctl disable firewalld.service #禁止firewall开机启动
</code></pre>

<h2>安装 iptables</h2>

<pre><code>yum install iptables-services
</code></pre>

<!-- more -->


<h2>配置 iptables</h2>

<pre><code>#!/bin/bash

IF="eth0"

#清除规则
/sbin/iptables -F
/sbin/iptables -X
/sbin/iptables -Z

# 预定义策略
/sbin/iptables -A INPUT -s 127.0.0.1 -j ACCEPT  # 允许回环接口可以被访问
/sbin/iptables -P INPUT   DROP # 默认是拒绝访问
/sbin/iptables -P OUTPUT  ACCEPT  # 允许本机访问其他机器，无限制
/sbin/iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
/sbin/iptables -A INPUT -p icmp -j ACCEPT # 允许ping


#允许的本机服务
/sbin/iptables -A INPUT -p TCP -i $IF --dport 22 -j ACCEPT        # SSH
# /sbin/iptables -A INPUT -p TCP -i $IF --dport  3306 -j ACCEPT        # mysql
/sbin/iptables -A INPUT -p TCP -i $IF --dport  80 -j ACCEPT        # web
/sbin/iptables -A INPUT -p TCP -i $IF --dport  8888 -j ACCEPT        # web

# 黑名单
#/sbin/iptables -A INPUT -s 1.1.1.0/24 -j DROP
#/sbin/iptables -A INPUT -s 1.1.1.0 -j DROP

# 信任的网络和IP
/sbin/iptables -A INPUT -s 1.1.1.1/24 -j ACCEPT # 信任的网络

# 保存配置
/usr/libexec/iptables/iptables.init save
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Crontab Eight Comm]]></title>
    <link href="http://happy123.me/blog/2015/08/07/crontab-eight-comm/"/>
    <updated>2015-08-07T18:11:11+08:00</updated>
    <id>http://happy123.me/blog/2015/08/07/crontab-eight-comm</id>
    <content type="html"><![CDATA[<p>网上收集，多次踩坑，立此存照</p>

<h2>crontab八诫</h2>

<ul>
<li><p>不要假定cron知道所需要的特殊环境，它其实并不知道。所以你要保证在shelll脚本中提供所有必要的路径和环境变量，除了一些自动设置的全局变量。所以注意如下2点：</p>

<ul>
<li>脚本中涉及文件路径时写全局路径；</li>
<li><p>脚本执行要用到java或其他环境变量时，通过source命令引入环境变量，如：</p>

<pre><code>  #!/bin/sh
  source /etc/profile
  export RUN_CONF=/home/xxxx/boss.conf
  /usr/local/jboss-4.0.5/bin/run.sh -c mev &amp;
</code></pre></li>
</ul>
</li>
<li><p>当手动执行脚本OK，但是crontab死活不执行时。这时必须大胆怀疑是环境变量惹的祸，并可以尝试在crontab中直接引入环境变量解决问题。如：</p>

<pre><code>  0 * * * * . /etc/profile;/bin/sh /var/www/java/audit_no_count/bin/restart_audit.sh
</code></pre></li>
<li><p>新创建的cron job，不会马上执行，至少要过2分钟才执行。如果重启cron则马上执行。</p></li>
<li><p>每条 JOB 执行完毕之后，系统会自动将输出发送邮件给当前系统用户。日积月累，非常的多，甚至会撑爆整个系统。所以每条 JOB 命令后面进行重定向处理是非常必要的: <code>&gt;/dev/null 2&gt;&amp;1</code>, 前提是对 Job 中的命令需要正常输出已经作了一定的处理, 比如追加到某个特定日志文件。</p></li>
<li><p>当crontab突然失效时，可以尝试<code>/etc/init.d/crond restart</code>解决问题。或者查看日志看某个job有没有执行/报错 <code>tail -f /var/log/cron</code>。</p></li>
<li><p>千万别乱运行 <code>crontab -r</code>。它从Crontab目录（/var/spool/cron）中删除用户的Crontab文件。删除了该用户的所有crontab都没了。</p></li>
<li><p>在crontab中%是有特殊含义的，表示换行的意思。如果要用的话必须进行转义 <code>\%</code>，如经常用的<code>date '+%Y%m%d'</code>在crontab里是不会执行的，应该换成 <code>date '+\%Y\%m\%d'</code>。</p></li>
<li><p>永远要手工验证一下crontab中的命令</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
