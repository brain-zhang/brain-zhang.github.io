<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blockchain | Living a Simple Life is a Happy Life]]></title>
  <link href="https://happy123.me/blog/categories/blockchain/atom.xml" rel="self"/>
  <link href="https://happy123.me/"/>
  <updated>2018-10-23T18:53:15+08:00</updated>
  <id>https://happy123.me/</id>
  <author>
    <name><![CDATA[memoryboxes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[比特币的HD钱包演化-1]]></title>
    <link href="https://happy123.me/blog/2018/10/23/bi-te-bi-de-hdqian-bao-yan-hua-1/"/>
    <updated>2018-10-23T18:49:26+08:00</updated>
    <id>https://happy123.me/blog/2018/10/23/bi-te-bi-de-hdqian-bao-yan-hua-1</id>
    <content type="html"><![CDATA[<h2>密钥分发的问题</h2>

<p>在之前我们的一篇文章<a href="https://happy123.me/blog/2016/12/25/jia-mi-ji-zhu-fa-zhan/">加密技术发展</a> 中提到了一个经典的问题:</p>

<!-- more -->


<ul>
<li><p>Alice和Bob是朋友，他们的住处离得比较远，Alice想要发送一则隐私消息给Bob</p></li>
<li><p>Eve想要窃听Alice和Bob的通信，Alice和Bob无法防止Eve的偷看</p></li>
<li><p>Alice把信放在一个盒子里，她上了锁，让邮差发给Bob，Eve没有钥匙，无法打开盒子，但是Bob也无法打开</p></li>
</ul>


<p>那么问题来了，Alice如何把钥匙发给Bob呢？</p>

<p>Alice如何发送钥匙给Bob的问题，就是现代密码学中<code>密钥分发</code>的问题;现代密码学的大部分研究，就是围绕这个问题展开的。</p>

<p>我们在思想实验中虚拟了两个解决方案:</p>

<h4>方案A</h4>

<ul>
<li><p>Alice把信息放到铁盒子里，上锁，发给Bob</p></li>
<li><p>Bob收到盒子，没有去想办法打开它，而是又加上了自己的一把锁，发回给Alice</p></li>
<li><p>Alice打开自己加的锁，发回给Bob</p></li>
<li><p>Bob打开自己的锁</p></li>
</ul>


<h4>方案B</h4>

<ul>
<li><p>Bob满世界散播自己的锁，随便一个人都能捡到Bob的锁并且能分辨是否被别人伪造</p></li>
<li><p>Alice捡了一把Bob的锁，把消息放进铁盒子里，锁上，发给Bob</p></li>
<li><p>Bob打开自己的锁</p></li>
</ul>


<p>这两个虚拟的解决方案意义非同寻常，它证明了两个人可以互相交换秘密的信息而不怕密钥泄露；但是在真实世界中，对一则文本信息加密，并不完全像给一个铁盒子上锁那样方便，我们如何把这两个故事的寓意融入到真正的密码术当中去呢？</p>

<h2>单向/双向函数</h2>

<p>在密码学中，很常用的一个数学特性叫做<code>单向函数</code>。</p>

<p>同样与之相对的，还有一个概念叫做<code>双向函数</code>。</p>

<p>让我们来看看他们是什么东东。</p>

<h4>双向函数</h4>

<p>大部分函数都是双向函数，<code>双向</code>意味着可逆。比如加倍函数就是一个双向函数:</p>

<p><code>
y = 2x
</code></p>

<p>知道了x，很容易能求得y；同理，知道了y，很容易逆向求得x。</p>

<h4>单向函数</h4>

<p>与上面相对的，知道x，很容易能求得y；但是知道了y，逆向很难推出x。这就是单向函数。举一个最常见的例子:</p>

<p><code>
y = 453^x % 21997
</code></p>

<p>一个很大的数的x次方来模除另一个很大的数，取模得到y，知道x，y是很容易计算的，但是反向从y推导x却十分困难。这就是一个单向函数。</p>

<p>码农童鞋们非常熟悉的一种算法:HASH(散列)，其原理就是建立在单向函数之上的；但是现在我们先把这个应用放到一边，单单探讨单向函数在密钥交换中的作用</p>

<h4>单向函数在密码学中的应用</h4>

<p>Alice和Bob在不懈的努力之后，发现采用上述 M<sup>x</sup> % P = y 的单向函数可以帮助他们交换密钥，而且
不怕遭到Eve的窃听，让我们看看他们怎么做到的：</p>

<table>
<thead>
<tr>
<th>选择 7<sup>x</sup> % 11 = y 这个单向函数作为约定函数 </th>
<th>Alice </th>
<th> Bob</th>
</tr>
</thead>
<tbody>
<tr>
<td>第一步 </td>
<td> Alice随机选择了一个数字代入x，比如3 </td>
<td> Bob 随机选择了一个数字代入x，比如6</td>
</tr>
<tr>
<td>第二步 </td>
<td> Alice运算得到 7<sup>3</sup> % 11 = 2  </td>
<td> Bob 运算得到 7<sup>6</sup> % 11 = 4</td>
</tr>
<tr>
<td>第三步 </td>
<td> Alice把2发给Bob  </td>
<td> Bob 把4发给Alice</td>
</tr>
<tr>
<td>第四步 </td>
<td> Alice得到Bob发送的结果4，代入单向函数再一次运算得到 4<sup>3</sup> % 11 = 9  </td>
<td> Bob 得到Alice的2后进行同样的运算 2<sup>6</sup> % 11 = 9</td>
</tr>
</tbody>
</table>


<p>神奇的事情发生了，第四步中Alice和Bob得出了相同的数字9，这个数字就是他们需要传递的密钥。</p>

<p>让我们再重新审视一遍，Alice和Bob在这次交换密钥的过程中都传递了什么呢？</p>

<ol>
<li>他们约定了单向函数的 M, P值</li>
<li>他们各自选定了一个x值，然后计算结果y值并互相传递</li>
<li>通过前面两组信息，他们各自独立计算出了密钥值</li>
<li>Eve如果监听到了M,P,以及两个人传递的y，是很难逆向计算出x，并得出密钥值的；这是单向函数的数学特性决定的</li>
</ol>


<p>通过仔细的选定一个稳妥的单向函数，就可以通过公开的讨论来建立一个密钥。这是密码学史上一个伟大发现。它是如此的简单和违反直觉，简直让人觉得不可思议。</p>

<p>如果仔细看看，两个人交换模除结果y的过程，是不是和我们之前提到过的<code>方案A</code>有点像呢，这就是思想实验在理论世界中的映射。</p>

<p>这个发现是由我们前面那篇<a href="https://happy123.me/blog/2016/12/25/jia-mi-ji-zhu-fa-zhan/">加密技术发展</a>中帅帅的大叔们在1972年的工作成果，向他们致敬！</p>

<h2>非对称加密算法的建立</h2>

<p>虽然我们上面所建立的交换密钥的方案已经取得了巨大的进步，但是这个方案并不完美，因为它有一个不方便的地方:</p>

<p>Alice 想要给Bob发信，必须拿到Bob的y值，除非是热恋的情人，谁能一直在线回复你的消息呢？所以Alice要发信，一定要Bob配合达成一个密钥才可以；如果Bob恰巧睡觉了，这封信就只能延迟发了</p>

<p>这个不方便之处促使密码学家们寻求更完美的解决之道，这促成了非对称加密算法的建立。</p>

<p>我们至今为止的所有探讨都是建立在对称加密算法之上的。所谓<code>对称加密</code>，就是你有一个密钥，使用这个密钥加密一段信息，同样可以使用这个密钥解密这段信息。正是之前所有的加密算法都是建立在这个基础上的，所以密钥的传递才是如此重要。</p>

<h4>现在让我们思考另外一种看似违反直觉的方案</h4>

<p>如果有一种加密解密函数，它的加密密钥和解密密钥是不同的。在这个系统中，如果Alice只知道加密密钥，她只能加密，加密之后自己却无法解密&mdash;除非她知道另外一个解密密钥。</p>

<p>听起来好像有点绕口。用现代密码学的定义来解释，就是Alice需要同时拥有两把密钥：私钥和公钥。私钥用来解密，公钥用来加密。这样Alice只要好好藏好自己的私钥，然后把公钥广播天下，谁想要给Alice写情书，就用Alice广播出来的公钥加密寄给她就好啦，只有持有私钥的Alice才能解密这封情书。</p>

<p>这个系统的巨大优点就是两人通信不需要同时在线来来回回折腾了，只要两人把各自把自己的公钥广而告之，任何一个人就可以毫不顾忌的用公钥加密，写一些只能给Alice和Bob才能解密的隐私信息了。</p>

<p>这个方案是由帅帅的Whtfield Diffie想到的，在此我们要撒一把狗粮；这位老兄灵光一现想到这个方案之后，第一个想要与之分享的人是他的妻子玛丽，当时的情形是这样的:</p>

<blockquote><p>那是在下午发生的，维特不得不等几个小时，玛丽才会回来。
&ldquo;维特等在门口，"玛丽回忆说，"他说有事要告诉我，他脸上的表情很奇怪。我进了门，他说:&lsquo;请坐下来，我想和你说话。我相信我有一个重大的发现&mdash;-我是第一个知道这问题答案的人。'那一刻我感觉时间突然停止了，我似乎生活在好莱坞的电影中。&rdquo;</p></blockquote>

<p>好，单身狗童鞋们从暴击伤害中回过神来没有，让我们继续艰难的人生~~~</p>

<p>虽然Whtfield Diffie早在1975年就提出了这个方案，但是他没有找到他所需要的函数。他公开发表了论文，号召同时代的数学家们一起来找；但是时间飞逝，年底还是没人能找到这样的函数，有些人灰心了；正在这时，远在5000公里之外的美国西海岸，有个小组找到了这样的函数~~~这就是今天大名鼎鼎的RSA算法的诞生。</p>

<h4>那些个帅帅的大叔们</h4>

<p><img src="https://raw.githubusercontent.com/memoryboxes/memoryboxes.github.io/source/images/20181023/bg1.jpg" alt="RSA加密发明人" /></p>

<p>额，关于RSA算法，阮一峰老师的文章写的更清晰，我就不多废话了；童鞋们可以移步<a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">这里</a>来探讨细节，当然，懒得去理解数学原理对于我们下面的探讨也没啥影响~~~~</p>

<h4>让我们总结一下一个典型的非对称加密算法的特点，并看看它是如何应用到实际中的</h4>

<ol>
<li>Bob手里有两把钥匙，一把是公钥，另一把是私钥。有了私钥能推导出公钥，有了公钥不能推导出私钥</li>
<li>用私钥加密，可以使用公钥解密</li>
<li>用公钥加密，可以使用私钥解密</li>
<li>Bob把公钥送给他的朋友们&mdash;&mdash;Alice, Sam ~~每人一把；或者直接把公钥公示在自己的个人网页上，谁都能看；</li>
<li>Alice要给Bob写一封保密的信。她写完后用Bob的公钥加密，就可以达到保密的效果。</li>
<li>Bob收信后，用私钥解密，就看到了信件内容。这里要强调的是，只要Bob的私钥不泄露，这封信就是安全的，即使落在别人手里，也无法解密。</li>
<li>Bob给Alice回信，决定采用"数字签名"。他写完后先用Hash函数，生成信件的摘要（digest）。</li>
<li>然后，Bob使用私钥，对这个摘要加密，生成"数字签名"（signature）。Bob将这个签名，附在信件下面，一起发给Alice。</li>
<li>Alice收信后，取下数字签名，用Bob的公钥解密，得到信件的摘要。由此证明，这封信确实是鲍勃发出的。</li>
<li>Alice再对信件本身使用Hash函数，将得到的结果，与上一步得到的摘要进行对比。如果两者一致，就证明这封信未被修改过。</li>
<li>复杂的情况出现了。Eve想欺骗Alice，他偷偷使用了Alice的电脑，用自己的公钥换走了鲍勃的公钥。此时，Alice实际拥有的是Eve的公钥，但是还以为这是Bob的公钥。因此，Eve就可以冒充Bob，用自己的私钥做成"数字签名"，写信给Alice，让Alice用假的Bob公钥进行解密。</li>
<li>后来，Alice感觉不对劲，发现自己无法确定公钥是否真的属于Bob。每次都去寻找Bob的个人网页去比对也很麻烦；她想到了一个办法，要求Bob去找"证书中心"（certificate authority，简称CA），为公钥做认证。证书中心用自己的私钥，对Bob的公钥和一些相关信息一起加密，生成"数字证书"（Digital Certificate）。</li>
<li>Bob拿到数字证书以后，就可以放心了。以后再给Alice写信，只要在签名的同时，再附上数字证书就行了。</li>
<li>苏Alice信后，用CA的公钥解开数字证书，就可以拿到Bob真实的公钥了，然后就能证明"数字签名"是否真的是Bob签的。</li>
<li>以上过程涉及了<code>非对称加密</code>，<code>HASH</code>，<code>签名</code>,<code>Digest</code>，<code>CA</code>等等名词，没错，我们说的就是HTTPS</li>
</ol>


<p>完整的资料参看这里：</p>

<p><a href="http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html">http://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html</a></p>

<h2>椭圆曲线ECC加密算法（Elliptic Curve Cryptography）</h2>

<p>我们看到了，非对称加密的核心，依赖于一个非常健壮的单向函数。RSA采用的是大素数分解的单向函数。这基于一个十分简单的数论事实：将两个大素数相乘十分容易，但是想要对其乘积进行因式分解却极其困难。大质数分解问题一直是数学里面的热门问题。</p>

<p>即便如此，因式分解在位对位基础里不是最难的问题.这些因式分解算法随着被因式分解的数字变得越大而变得越有效率。因式分解大批数字和乘以大批数字的难度的差距随着数字（即秘钥的字节长度）变大而缩小。随着有效解码数字的资源增加，秘钥的大小必须更快增长。对限制计算能力的手机和低功率设备来说，这不是一个可持续的情况。从长期来看，因式分解和乘法的差距是不可持续的。</p>

<p>所有这一切意味着RSA不是理想的系统对将来的密码学来说。在一个完美的trapdoor函数里，对于数字大小的问题，简单方法和困难方法都一同样的速率变难。所以我们需要一个基于更好的trapdoor的公钥系统。</p>

<p>以上RSA的这些不完美加速了另外一种算法的诞生：在1985年，加密算法被提议以一个叫椭圆曲线的数学奥秘分支为基础。这也是比特币账号采用的核心加密方法。</p>

<h4>什么是椭圆曲线</h4>

<p>对于我们小白来说，椭圆曲线可以暂时简单的理解为描述了特定点的集合的公式：</p>

<p><code>
y^2 = X^3 + ax + b
</code></p>

<p>取不同的a值和b值，这个函数在坐标轴上绘制出来的曲线大概是这样的:</p>

<p><img src="https://raw.githubusercontent.com/memoryboxes/memoryboxes.github.io/source/images/20181023/bg2.jpg" alt="椭圆曲线" /></p>

<p>a和b的取值变化决定了曲线在坐标系上的不同形状。从图中可以看到，椭圆曲线是相对X轴对称。</p>

<p>通过椭圆曲线乘法可以从私钥计算得到公钥，这是不可逆转的过程：K = k * G 。其中k是私钥，G是被称为生成点的常数点，而K是所得公钥。其反向运算，被称为“寻找离散对数”——已知公钥K来求出私钥k——是非常困难的。椭圆曲线乘法是密码学家称之为“陷阱门”功能的一种函数：在一个方向（乘法）很容易做，而不可能在相反的方向（除法）做。 私钥的所有者可以容易地创建公钥，然后与世界共享，知道没有人可以从公钥中反转函数并计算出私钥。</p>

<h4>secp256k1椭圆加密曲线</h4>

<p>a和b的不同取值可以画出多条不同的曲线，比特币使用了secp256k1标准所定义的一种特殊的椭圆曲线和一系列数学常数。该标准由美国国家标准与技术研究院 （NIST）设立。secp256k1曲线由下述函数定义，该函数可产生一条椭圆曲线：</p>

<p><code>
y^2 % p = (X^3 + 7) % p
</code></p>

<p>看到了吧，这个函数结合了我们之前介绍的取模操作和椭圆曲线函数。</p>

<p>上述素数p取模表明该曲线是在素数阶p的有限域内，也写作Fp，其中p = 2<sup>256</sup> – 2<sup>32</sup> – 2<sup>9</sup> – 2<sup>8</sup> – 2<sup>7</sup> – 2<sup>6</sup> – 2<sup>4</sup> – 1， 这是个非常大的素数。 因为这条曲线被定义在一个素数阶的有限域内，而不是定义在实数范围，它的函数图像看起来像分散在两个维度上的散落的点，因此很难可视化。不过，其中的数学原理与实数范围的椭圆曲线相似。</p>

<p>这条曲线画出来的样子大概是这样的:</p>

<p><img src="https://raw.githubusercontent.com/memoryboxes/memoryboxes.github.io/source/images/20181023/bg3.jpg" alt="椭圆曲线" /></p>

<p>在椭圆曲线的数学原理中，有一个点被称为“无穷远点”，这大致对应于0在加法中的作用。计算机中，它有时表示为X = Y = 0（虽然这不满足椭圆曲线方程，但可作为特殊情况进行检验）。</p>

<p>还有一个 + 运算符，被称为“加法”，就像小学数学中的实数相加。给定椭圆曲线上的两个点P1和P2，则椭圆曲线上必定有第三点 P3 = P1 + P2。 几何图形中，该第三点P3可以在P1和P2之间画一条线来确定。这条直线恰好与椭圆曲线相交于另外一个地方。此点记为 P3'= (x，y)。然后，在x轴做翻折获得 P3=(x，-y)。</p>

<p>下面是几个可以解释“穷远点”之存在需要的特殊情况。</p>

<p>若 P1和 P2是同一点，P1和P2间的连线则为点P1 的切线。曲线上有且只有一个新的点与该切线相交。该切线的斜率可用微积分求得。即使限制曲线点为两个整数坐标也可求得斜率！</p>

<p>在某些情况下（即，如果P1和P2具有相同的x值，但不同的y值），则切线会完全垂直，在这种情况下，P3 = “无穷远点”。</p>

<p>若P1就是“无穷远点”，那么其和 P1 + P2= P2。类似地，当P2是无穷远点，则P1+ P2 = P1。这就是把无穷远点类似于0的作用。 事实证明，在这里 + 运算符遵守结合律，这意味着(A+B)+C = A+(B+C)。这就是说我们可以直接不加括号书写 A + B + C，而不至于混淆。 因此，我们已经定义了椭圆加法，我们可以对乘法用拓展加法的标准方法进行定义。给定椭圆曲线上的点P，如果k是整数，则 kP = P + P + P + …+ P（k次）。注意，在这种情况下k有时被混淆而称为“指数”。</p>

<h4>生成公钥</h4>

<p>以一个随机生成的私钥k为起点，我们将其与曲线上预定的生成点G相乘以获得曲线上的另一点，也就是相应的公钥 K。生成点是secp256k1标准的一部分，比特币密钥的生成点都是相同的：</p>

<p>{K = k * G}</p>

<p>其中k是私钥，G是生成点，在该曲线上所得的点K是公钥。因为所有比特币用户的生成点是相同的，一个私钥k乘以G将 得到相同的公钥K。k和K之间的关系是固定的，但只能单向运算，即从k得到K。这就是可以把比特币地址（K的衍生） 与任何人共享而不会泄露私钥（k）的原因。</p>

<p>提示 因为其中的数学运算是单向的，所以私钥可以转换为公钥，但公钥不能转换回私钥。</p>

<p>为实现椭圆曲线乘法，我们以之前产生的私钥k和与生成点G相乘得到公钥K：</p>

<p>K = 1E99423A4ED27608A15A2616A2B0E9E52CED330AC530EDCC32C8FFC6A526AEDD * G</p>

<p>公钥K 被定义为一个点 K = (x, y)：</p>

<p>K = (x, y)</p>

<p>其中，</p>

<p>x = F028892BAD7ED57D2FB57BF33081D5CFCF6F9ED3D3D7F159C2E2FFF579DC341A y = 07CF33DA18BD734C600B96A72BBC4749D5141C90EC8AC328AE52DDFE2E505BDB</p>

<p>为了展示整数点的乘法，我们将使用较为简单的实数范围的椭圆曲线。请记住，其中的数学原理是相同的。我们的目标是找到生成点G的倍数kG。也就是将G相加k次。在椭圆曲线中，点的相加等同于从该点画切线找到与曲线相交的另一 点，然后翻折到x轴。</p>

<p>下图显示了在曲线上得到 G、2G、4G 的几何操作。</p>

<p><img src="https://raw.githubusercontent.com/memoryboxes/memoryboxes.github.io/source/images/20181023/bg4.jpg" alt="椭圆曲线" /></p>

<h4>比特币账户</h4>

<p>呼呼，以上就是比特币的账户核心算法的一部分。</p>

<ol>
<li>选定了secp256k1算法，其实是通用的椭圆曲线的特化(a=0, b=7)，另外选定一个非常大的模除数字p</li>
<li>选定了一个G点，<code>G = 04 79BE667E F9DCBBAC 55A06295 CE870B07 029BFCDB 2DCE28D9 59F2815B 16F81798 483ADA77 26A3C465 5DA4FBFC 0E1108A8 FD17B448 A6855419 9C47D08F FB10D4B8</code></li>
<li>随机生成了一个私钥k</li>
<li>求得公钥K = k * G，这里对G进行了k次翻转，一个不可逆的操作得到公钥K</li>
<li>对K再做后续变形，最终得到比特币账户的地址，这个变形又是一系列神操作，我们在后面的文章会讲</li>
</ol>


<h2>寻求更极限的安全</h2>

<p>到目前为止，密码学家们为了实现更安全的非对称加密算法，探索了模除、大素数分解、以及椭圆曲线；他们的共同特点就是逆向运算极难极难；但是极难并不代表着不可能，随着量子计算的发展，谁也不能保证今后逆向运算的复杂度会不会有大幅降低；所以寻求更安全的单向函数始终是密码学家们最重要的工作之一；</p>

<p>近年来，这个探索的边界又有了更大的突破，就是为人们所熟知的量子加密技术。</p>

<p>限于篇幅，我们就不做更多的科普了，可以参考这本书:</p>

<p><a href="https://book.douban.com/subject/1036413/">https://book.douban.com/subject/1036413/</a></p>

<p>PS:一个小科普，量子计算机和量子加密其实没有多大关系哦，他们之间其实是雷锋和雷峰塔的关系，就是名字相似而已，可不要被忽悠哦</p>

<h2>总结</h2>

<p>呼呼，老实说，我最初想要介绍的是比特币HD钱包的演化过程，BIP32,BIP44,BIP49，BIP84以及BIP141这些文档共同定义了比特币HD钱包的底层构造。</p>

<p>从BIP44开始，比特币账户的管理其实已经在中本聪最初定义的一个简单地址生成的路上又走了很远；我也觉得HD钱包是比特币社区为区块链技术贡献的一个非常重要、非常有用的部分；这个钱包生成的技术超出了比特币本身，在可见的未来，会在多个领域发挥巨大作用。</p>

<p>为了学习比特币HD钱包的基础理论支撑，我们从最原始的凯撒加密，到Alice和Bob的思想实验，到单向函数，再到安全的密钥分发方法，到非对称加密，椭圆曲线，甚至还隐约看到了量子加密，这一切的一切是近2000年来无数密码学家们日日夜夜的冥思苦想的成果；</p>

<p>然后站在所有这些成果的基础上，到了中本聪及比特币技术社区手中融合发扬光大；创造了独一无二的电子货币金融账户；这个账户设计的方法之精妙，值得我们再长篇大论一番；那么，下次文章再见。</p>

<p>参考资料:</p>

<p><a href="https://book.douban.com/subject/30280401/">https://book.douban.com/subject/30280401/</a></p>

<p><a href="https://book.douban.com/subject/1036413/">https://book.douban.com/subject/1036413/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[黎曼猜想的证明会对加密货币产生影响吗?]]></title>
    <link href="https://happy123.me/blog/2018/09/26/li-man-cai-xiang-de-zheng-ming-hui-dui-jia-mi-huo-bi-chan-sheng-ying-xiang-ma/"/>
    <updated>2018-09-26T10:19:00+08:00</updated>
    <id>https://happy123.me/blog/2018/09/26/li-man-cai-xiang-de-zheng-ming-hui-dui-jia-mi-huo-bi-chan-sheng-ying-xiang-ma</id>
    <content type="html"><![CDATA[<p>当今资讯发达，娱乐界、学术界以及投机赌博界已然不分家了。</p>

<p>Michael Atiyah老爷子来一场数学报告，已然惊动众多娱乐媒体和赌徒大佬。老爷子的秀场视频在这里，快去瞻仰:</p>

<p><a href="https://www.youtube.com/watch?v=oe4Jo4i3w_w">https://www.youtube.com/watch?v=oe4Jo4i3w_w</a></p>

<p>为了跟上时代的步伐，民工也要求上进啊，只能又去填鸭科普了一下数学ABC。</p>

<!-- more -->


<h3>黎曼猜想是啥</h3>

<p>黎曼猜想起源于素数的研究。素数在自然数中是一种特别的数，它只能被1和自己整除。而且素数的个数是无限的。</p>

<p>素数如此特别，数学家们试图搞清楚如何判断一个数是素数。给你一个小的数，例如7，你很容易判断它是素数。但是当给你一个很大的数字时，判断一个数是否为素数，是需要方法的。由此产生了素数判定的算法。</p>

<p>为了更好地理解素数，数学家们在 19 世纪便不再尝试预测素数的精确位置，转而将素数的现象视为一个整体。这个预测素数分布规律的挑战吸引了众多大佬，包括我们的数学王子gauss，独行侠Selberg等等，最著名的还是Riemann hypothesis提出的黎曼猜想。这段历史可以参考卢昌海老师的<a href="https://www.changhai.org/articles/science/mathematics/riemann_hypothesis/index.php">科普文</a>。</p>

<p>黎曼1859年在他的论文《论小于已知数的素数个数》提出了这个著名的猜想，但它并非该论文的中心目的，他也没有试图给出证明。这个猜想描述如下:</p>

<p><img src="https://ws1.sinaimg.cn/large/893d6e9dly1fvmquq5a8ej211y04wgqb.jpg" alt="黎曼猜想" /></p>

<p>这个函数称之为黎曼 zeta 函数。黎曼给出了一个推测：黎曼 zeta 函数的所有非平凡零点可能都全部位于实部等于1/2的直线上。上述公式中的第二项，x 的 ρ 次幂的ρ就是黎曼 zeta 函数非平凡零点。</p>

<h4>简而言之，任意给定一个自然数x，通过这个公式能更精确的得出 x 以内素数的个数。</h4>

<p>那么这个公式是正确的吗，通过现在的计算机暴力计算，不能证伪，好像是正确的。但是也没有人能给出严格的证明，所以称之为是猜想。</p>

<h3>如果猜想被证明，对安全界有什么影响</h3>

<p>这又得从我们码农熟知的非对称加密算法开始说起了。众所周知，SSL/TLS(https)等一系列安全协议都是建立在RSA算法之上的，而RSA作为非对称加密算法的典型代表，又是建立在大素数分解的基础上的。这部分可以参考阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html">科普文</a>。</p>

<p>那么黎曼猜想如果被证明，是不是意味着RSA算法就不再安全了呢？作为吃瓜群众，大可不必去跟风娱乐媒体，不需要多高深的数学知识就能自己来判断:</p>

<ol>
<li><p>黎曼猜想是在1859年提出的，虽然没人能证明，但是也没人能证伪，这说明这个方法作为一个判别素数个数分布的工具，已然被广泛运用多年了</p></li>
<li><p>非对称加密是在20世纪70年代末提出的，如果黎曼猜想能加速大素数分解的计算，那么其实1970s左右，RSA诞生之初，就已经面临重大威胁了</p></li>
<li><p>素数检测和整数分解是两回事，至今还没有人找到他们之间有何联系</p></li>
<li><p>如果素数的检测能加速分解计算的话，即使有某个人或某个组织掌握了这个技术，那么全世界的网络，包括各大银行、金融、政府组织，都会受到严重威胁；但是目前为止还没有啥迹象；</p></li>
</ol>


<h3>如果猜想被证明，对加密数字货币(如比特币)有什么影响</h3>

<p>我们知道，比特币的安全设计是远远领先于时代的，我们之前在<a href="https://happy123.me/blog/2018/04/24/cryptocurrency-security/">这篇文章</a>中，曾经谈到过比特币的地址安全问题。</p>

<ol>
<li><p>基本上所有加密货币的地址都是参考比特币，采用椭圆曲线非对称加密算法为基础生成的</p></li>
<li><p>椭圆曲线和RSA的套路完全不同，和素数分解也没啥关系，即使RSA被破解了，和比特币也是雷峰塔倒掉和学雷锋的关系&mdash;&mdash;就是没关系</p></li>
<li><p>大多数加密货币的挖矿采用了许多不同的单向散列(HASH)函数，目前理论来看，这基本上也和素数分布没啥关系</p></li>
</ol>


<h2>结论</h2>

<ol>
<li><p>黎曼猜想能不能成功证明、有没有人能理解这个证明还是两说</p></li>
<li><p>即使黎曼猜想不能被证明，它作为一个检测素数分布的工具使用已经好多年了，如果真的对基于素数分解的非对称加密算法有威胁，100多年了，早也应该暴雷了吧</p></li>
<li><p>即使RSA GAME OVER了，对于以椭圆曲线为基础的比特币等加密货币，没啥影响</p></li>
<li><p>估计娱乐媒体又要对中本聪一顿<code>先知</code>神吹了</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自由交易创造财富?]]></title>
    <link href="https://happy123.me/blog/2018/09/12/zi-you-jiao-yi-chuang-zao-cai-fu/"/>
    <updated>2018-09-12T15:44:14+08:00</updated>
    <id>https://happy123.me/blog/2018/09/12/zi-you-jiao-yi-chuang-zao-cai-fu</id>
    <content type="html"><![CDATA[<p>有人调侃说，这世上有些事人人都觉得自己懂：音乐，政治，和经济。</p>

<!-- more -->


<p>看看股市里面各种股评家就知道了，感觉人人都是斯密再生，什么不可能三角，反身性，蓄水池，M0 M1 M2，做空美国，汇率战争&hellip;&hellip;纵论世界经济大势，舍我其谁。</p>

<p>作为一个财经盲，听到人家谈论这些话题的时候完全是一脸懵逼，智商失联；为了提高一点点可怜的交际能力，近期恶补一番《国富论》。</p>

<p>于是，我由文盲晋级到小白，Level+1。这里记录一下小白的瞎想：</p>

<h2>斯密全书反复强调的一个观点: 分工和自由交易可以创造巨大的财富</h2>

<h4>分工创造财富</h4>

<p>书中开篇就举了一个例子:</p>

<blockquote><p>以前一个工匠一天最多做几十枚铁钉。但是在一个现代化工厂中，一天则可以生产几万枚。之所以有如此大的提升，原因就是进行了细致的分工：</p>

<p>有的人负责把铁熔成铁水，有的人负责把铁水抽成铁丝，有的人负责把铁丝斩断，再有的人负责把铁丝磨尖，另外有人把头给打出来，这个流程每一个人都特别熟悉自己的哪一个非常小的环节。这种分工协作，让每个人都对自己的这一个环节特别熟悉，生产效率得到了上百倍的提高。</p></blockquote>

<p>斯密观察到了这种现象，专业分工可以极大的提高生产力、创造财富——这个结论在今天已经成为常常识，在中学的课本上我们就对其耳熟能详。</p>

<h4>自由交易创造财富</h4>

<p>交易创造财富呢？</p>

<p>这一听好像是非常违背常识的事情。我们的吃穿用度，都是劳动人民辛辛苦苦用汗水换来的，是生产活动创造了财富；</p>

<p>而交易，无非是投机倒把，更甚者，那些金融掮客们，不事生产，不辨菽麦，怎么能说他们创造财富呢？一批金融人士和股民集体中枪中&hellip;.</p>

<p>斯密先生是如何解释的呢？他在<code>分工创造财富</code>的基础上继续追问，是什么促成了专业分工这种生产方式？</p>

<blockquote><p>他进一步分析，得出结论：专业分工是基于庞大的、自由的市场交易。</p>

<p>一是市场得庞大，二是交易得自由：</p>

<p>如果在某一个闭塞的小地方建立一个工厂，每日生产几万颗铁钉，铁钉是卖不出去的，因为一个人一年只需要五六根——市场不够大。市场不够大，高密度的分工就不会出现。这就是资本主义国家总是想打开封闭国家的大门的原因。</p>

<p>市场够大了，但是如果交易不自由，被各种限制，也不行。当时的欧洲，还存在封建割据。商人要把一个东西从英国卖到德国去，中间要穿过几十个封建小国，过一个关，收一道税，“通关文牒”上密密麻麻盖满了章。而且有些产品还不让过，严重阻碍了交易自由。这样，高密度的分工也不会出现。</p>

<p>当时的欧洲，还流行封建行会制度：不能说你有技术，能做鞋，你就开店去做鞋了！得经过行会批准，否则就是非法经营，就砸你的店。而且工人也不能自由跳槽，你跟了一个师傅，就像拜师学艺，不能说这个师傅对你不好，你就另找一个师傅！那不行，那是违背“道德”的。</p>

<p>这种“道德”和封建制度的枷锁，对生产力的束缚是非常之大。</p>

<p>不只是普通商品需要自由交易，土地、资本、劳动力等生产要素，也都应该可以自由交易才行——交易自由是基本的人权。</p></blockquote>

<h4>&ldquo;交易"在大部分人的直觉中，只是转移、交换，财富是不会增加的。其中的秘密是什么呢？</h4>

<p>斯密提出了一个非常著名的悖论：</p>

<blockquote><p>空气和水对于我们非常重要，却几乎是免费的，黄金钻石属于非必需品，没有它也能照样生活，却贵得要死。</p></blockquote>

<p>衣服比较需要，价格比较便宜，汽车不一定需要，价格相当昂贵。你会发现越是你不需要的东西，价格越贵。</p>

<p>为什么会这样？</p>

<p>斯密想：是什么决定了物品的价值？</p>

<p>他开创性地提出了使用价值（用值）和交换价值（换值）的概念：用值高的东西，换值可能很低，用值低的东西，换值可能很高。</p>

<p>后来有了"边际"概念之后，后人发现，换值其实就是边际用值。</p>

<p>水的用值非常高，但在喝了5杯水之后，再多喝一杯的用值则非常低了，喝到你不想再多喝一口！其边际用值非常低。</p>

<ul>
<li><p>一只画笔，在放羊娃的手里一钱不值，但到了齐白石手中，丹青妙笔下的画卷价值万金；</p></li>
<li><p>一亩鱼塘，游牧民族不屑一顾，江南农民眼里可能就千金不换；</p></li>
</ul>


<p>而这些资源，天分是老天爷随机配比的，每个人都不可能生下来物尽其用、才尽其用、各得其所；更何况一个人的境遇、天然的环境是时时变化的，齐白石也可能拿不动笔，骑马的汉子也可能会娶江南的姑娘，他也需要一亩鱼塘来养家糊口；于是便产生了交易；</p>

<p>财富的本质，源于"资源的有效配置"，就是有效的交易；资源可以是自然资源、天分、知识、美貌等等一切有人看重的东西；</p>

<p>当交易无时无刻不在发生，那么价值就无时无刻不在创造。</p>

<p>交易创造财富！</p>

<p>这种自由交易的机制，不需要有人去刻意安排，也不需要刻意维持和鼓励。只要你不去人为地打压，它就会如野草般自己生长。</p>

<p>原因何在呢？斯密先生的解释是：</p>

<blockquote><p>很多时候，一个人会需要兄弟朋友的帮助，但假如他真的要依靠他们的仁慈之心，他将会失望。倘若在需求中他能引起对方的利己之心，从而证明帮助他人是对自己有益的事，那么这个人的成功机会较大。任何人向他人提出任何形式的交易建议，都是这样想：给我所需要的，我就会给你所需要的——这是每一个交易建议的含义；而我们从这种互利的办法中，所获的会比我们所需的更多。我们的晚餐可不是得自屠夫、酿酒商人，或面包师傅的仁慈之心，而是因为他们对自己的利益特别关注。我们认为他们给我们供应，并非行善，而是为了他们的自利。</p>

<p>所以，每个人都会尽其所能，运用自己的资本来争取最大的利益。一般而言，他不会意图为公众服务，也不自知对社会有什么贡献。他关心的仅是自己的安全、自己的利益。但如此一来，他就好像被一只无形之手引领，在不自觉中对社会的改进尽力而为。在一般的情形下，一个人为求私利而无心对社会作出贡献，其对社会的贡献远比有意图作出的更大。</p></blockquote>

<p>这样看来，一个有意思的推论就产生了：</p>

<h4>某些财富可能不过是一种幻觉！！</h4>

<p>我们所看重的东西，所谓的财富，不管是我们的衣食住行实实在在的实物，还是音乐文学绘画等等精神产品，建立的基础是人们的需求。而人们的需求并不是万古不变的:</p>

<p>比如美学产品，很难说几千年后毕加索的作品会有何种评价；或者科幻一点，将来有了可飞行的汽车，市中心的房子能有多大市场&hellip;&hellip;</p>

<p>说的更唯心一点，劳动人民不过是在一种精神层面需求的驱动下生产的，财富的第一创造驱动力来自于交易。</p>

<p>D(t) > 0；交易创造财富；</p>

<p>简明版本的解释就是：</p>

<ul>
<li><p>人们喜欢吃梨子和苹果，于是培育了果树</p></li>
<li><p>我喜欢吃梨，但是家里只有苹果树；你喜欢吃苹果，家里只有梨树</p></li>
<li><p>我拿苹果换梨子，需求满足++，创造了财富</p></li>
</ul>


<h4>为什么会有人限制苹果换梨子</h4>

<p>既然自由的市场是最好的，为什么政府还会有种种管制行为呢？为什么还会有贸易战呢？再进一步，为什么需要政府插手经济呢？</p>

<ul>
<li>自由市场是会崩溃的。</li>
</ul>


<blockquote><p>16世纪后期的荷兰，出现了发达的商业贸易。但也是商业贸易，促成了“郁金香泡沫”的爆发，这是有史记载的第一次金融泡沫。</p>

<p>从16世纪中期到17世纪初期，人们逐渐对郁金香产生了狂热。一些郁金香珍品被卖到了不同寻常的高价，富人们竞相在他们的花园中展示稀有的品种。1635年，一种叫Childer的郁金香品种单株卖到了1615弗罗林（florins，荷兰货币）。一株这玩意，就能换3头公牛。第二年，一株稀有品种的郁金香（当时荷兰全境只有两株）卖到了4600弗罗林的价格，除此之外，购买者还需要支付一辆崭新的马车、两匹灰马和一套完整的马具。</p>

<p>但是，所有的金融泡沫，正如它们在现实世界中的名字所喻示的那样脆弱。这个因为自由交易而导致的泡沫，最终崩溃了。</p></blockquote>

<p>正常交易创造了财富值100，人的贪婪本性注定了有人想要攫取财富值1000；于是有了欺诈和恐惧，于是有了管制；国家也是一样的，总有一些国家更加贪婪，或者说每个国家都会更加贪婪，它们之间也会有恐惧和欺诈，于是诞生了贸易战。</p>

<ul>
<li>自由交易的市场能创造出一切东西，唯独不能创造市场本身</li>
</ul>


<p>一个公平的环境需要信用，目前为止，人类历史更迭，尝试了无数种办法，能维系信用的唯有<code>暴力</code>；这促成了国家的诞生。国家一定要用暴力来维护市场。</p>

<p>人类财富的创造源泉，最终由<code>交易</code>推导到了<code>信用</code></p>

<h2>让我们谈谈区块链(blockchain)吧</h2>

<p>我是非常不愿对这个东西夸夸其谈的，因为卷入这个场子的人，在我看来，就像美国大淘金时代一样，小偷、骗子、强盗实在太多。</p>

<p>好吧，我也一样，自以为悟到了一些东西就来夸夸其谈，大家当成笑料听听就好，不用当真。</p>

<h4>区块链是人类历史上第一次找到了这样一种工具：它维系市场，超乎暴力之上</h4>

<p>区块链是信用的承载。让我们这样想象：</p>

<p>来源于名为<code>Bitcoin</code>的信用之水，得益于早期信徒的开采维护，汇集成了一条小溪汩汩向东流去；</p>

<p>一路上有更多的信徒创造更多的信用，合力汇集为一条名为<code>blockchain</code>的大河，滚滚东流；</p>

<p>这条大河是最终到达信用之海，创造出一个超出暴力之上的信用汇集而成的新市场；还是因为没有更多的信用注入，逐渐干涸为沼泽，沦为一个庞氏骗局，没有人能预言。</p>

<p>不过可以这样推想，信用是个很神奇的东西：它无法定量计算，但是社会上产生的信用多寡又是如此明显；人人都知道一个正直的人创造的信用值肯定大于一个骗子；同理，同样的人口，一个民风淳朴的国家创造的信用肯定大于索马里人民的信用值；</p>

<p>最神奇的，一个人可以创造的信用没有明显的上限；信用也可以由一代代的人无限创造；相对的，信用也可能不断损耗，最终趋近于0。</p>

<p>我们所景仰的奥马哈先知曾多次强调：比特币是老鼠药的平方。</p>

<p>当区块链上承载的信用量不再增加的时候，就是一朵郁金香。奥马哈的先知此时是对的。</p>

<p>当区块链上承载的信用无限增加的时候，就是永不终结的市场。当然这个概率有多少，没人能预测。</p>

<h4>回到未来</h4>

<p>让我们掏出水晶球，冒险预言一下blockchain的未来：</p>

<ul>
<li>初期</li>
</ul>


<p>就像早期大淘金时代一样，这个市场会充斥骗子、小偷、强盗、投机家，以及一些英雄人物；但还是摆脱不了<code>庞氏骗局</code>的帽子</p>

<p>正如我们前面所强调了，区块链是一条信用之链，而且目前维护这样一条链的代价及其昂贵；</p>

<p>既然是如此金贵的资源，那么最初利用它做什么呢？有什么东西是信息量无限小，价格无限大呢？</p>

<p>我们把能想到的领域排排坐：</p>

<p>1.铸币权</p>

<p>2.投机博彩传销</p>

<p>3.洗钱</p>

<p>4.黑市</p>

<p>5.国际汇款</p>

<p>6.券商承兑，金融产品</p>

<p>7.法律公证等等一切需要用到公章的地方</p>

<p>8.版权、数字营销、保险、电子证据、物联网、供应链、积分共享、征信、公益、游戏道具等等PPT概念产品</p>

<p>9.工业能源政务医疗衣食住行阿猫阿狗等等忽悠</p>

<p>&hellip;&hellip;</p>

<p>目前占大头的应用是什么呢？上面的诸家应用能在什么阶段落地呢？</p>

<p>是不是看出来有些东西永远不能落地，为什么呢？</p>

<p>大家自有分辨。</p>

<ul>
<li>早期</li>
</ul>


<p>一个国家金融业完善发达，一个国家还处于一穷二白，谁更需要所谓的数字货币，所谓的区块链呢？</p>

<p>与直觉相反，我认为将来比特币会在中东这种政治动荡之地，拉美这种经济动荡之地，非洲这种一穷二白之地发挥巨大作用；</p>

<p>对于其它经济体，肯定会抵制、再抵制，直到无可奈何，开一道小口子，让其在外贸领域有点活命的机会；或者说，比特币是永远不能登上主流舞台的，它只能跟投机、黑市、国家破产等等联系在一起。</p>

<p>那是不是说，这个技术就没有前途呢？就等着各国纷纷禁止，然后戳破泡沫，价格归零呢？</p>

<ul>
<li>中期</li>
</ul>


<p>不是的，它是一项非常非常危险的创造，潘多拉魔盒一旦打开，无法关闭。数字货币的生命力可能会超过许多国家的寿命，成为新时代的黄金，但是是一种不能为国家所容忍的黄金。</p>

<p>所以，这个泡沫会 破灭->复兴->破灭，不断的循环下去，投身于其中的人会越来越多；</p>

<p>这是一个泡沫，但是可能会持续几十年甚至超过国家的寿命，也可能一夜归零后，等待几年甚至几十年才能有下次复兴；</p>

<p>blockchain本质上是一项跟国家抢夺铸币权、抢夺信用定价权的技术，它从根本上动摇了国家的根基，所以可能会出现绝大多数国家联起手来，共同封杀这项技术的一天。</p>

<ul>
<li><p>后期</p>

<ul>
<li><p>究竟是人类的贪婪占据上风，信用之河就此干涸成为沼泽，最终作为最大的郁金香泡沫永载史册呢?</p></li>
<li><p>还是一小撮信徒自诩为摩西，或者卫星上天，或者公海游弋，或者开疆裂土，建立一个信用自由港呢？</p></li>
<li><p>还是开天辟地，超脱国家和暴力，成立一个新的信用市场呢？</p></li>
</ul>
</li>
</ul>


<h4>唯有时间能给出答案。</h4>

<hr />

<p>PS: 神遭遭瞎扯了这么多，其实我是被Bitcoin Core的闪电网络的代码搞烦了，我怎么也理解不了；</p>

<p>理解不了的东西让我对他的安全性产生重大怀疑，我能创造的的信用值直线下降；</p>

<p>市场动荡之际，我投入BCH阵营了；好吧，这一次我是个投机者了，Maybe将来很悲惨，所以回到未来记下这一惨痛投机教训。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Minimum Fee of Bitcoin Transaction]]></title>
    <link href="https://happy123.me/blog/2018/09/11/the-minimum-fee-of-bitcoin-transaction/"/>
    <updated>2018-09-11T15:13:35+08:00</updated>
    <id>https://happy123.me/blog/2018/09/11/the-minimum-fee-of-bitcoin-transaction</id>
    <content type="html"><![CDATA[<p>昨天看到地球人都知道的1号地址转了<a href="https://btc.com/b9a6f0b287646c30bdafa08cc997d7af93ca20eb7b2d09084ddf7a7a075394b2">0.00000555个币进来</a>，也不知道是谁在做测试，恶作剧心起，遂想要转掉这点娱乐币。</p>

<p>默认Bitcoin Core 0.15之后的客户端貌似都不能调节transaction fee大小了，老实说，自从Segwit升级完毕之后，我很少用core钱包了。这次没办法，为了构造一笔最小手续费用的交易，采取如下动作:</p>

<!-- more -->


<p>1.先看一下vout和txid:</p>

<p><code>
bitcoin-cli listunspent 0 9999999 "[\"12AKRNHpFhDSBDD9rSn74VAzZSL3774PxQ\"]"
</code>
输出里面找到 <code>12AKRNHpFhDSBDD9rSn74VAzZSL3774PxQ</code>的vout为0， txid是<code>b9a6f0b287646c30bdafa08cc997d7af93ca20eb7b2d09084ddf7a7a075394b2</code></p>

<p>2.创建转账交易</p>

<p><code>
bitcoin-cli createrawtransaction "[{\"txid\":\"b9a6f0b287646c30bdafa08cc997d7af93ca20eb7b2d09084ddf7a7a075394b2\",\"vout\":0}]" "{\"1HB1Efu8RkEpxzTHYd1E7NgdimL1ddDhkR\":0.0000055}"
</code></p>

<p>得到十六进制输出</p>

<p><code>
0200000001b29453077a7adf4d08092d7beb20ca93afd797c98ca0afbd306c6487b2f0a6b90000000000ffffffff0126020000000000001976a914b1665e71006dbfbabb69cbcdc5717b11abdb89e888ac00000000
</code></p>

<p>3.签名之</p>

<p><code>
bitcoin-cli signrawtransaction  "0200000001b29453077a7adf4d08092d7beb20ca93afd797c98ca0afbd306c6487b2f0a6b90000000000ffffffff0126020000000000001976a914b1665e71006dbfbabb69cbcdc5717b11abdb89e888ac00000000"
</code></p>

<p>得到十六进制输出</p>

<p><code>
{
  "hex": "0200000001b29453077a7adf4d08092d7beb20ca93afd797c98ca0afbd306c6487b2f0a6b9000000008a47304402202a51aa8eb0593a4b48880712c3ee70b7d6ca74ed313ef93e9c92489616587a2c022048c87fde75761e2a9cc9fef7dc8d0d9961ef1df89e22f88e5e3902567ec956f8014104fdf4907810a9f5d9462a1ae09feee5ab205d32798b0ffcc379442021f84c5bbfc891eb16b0faef4bef99ba6d522fb85470a20df730808e583778aa35c7af98f5ffffffff0126020000000000001976a914b1665e71006dbfbabb69cbcdc5717b11abdb89e888ac00000000",
  "complete": true
}
</code></p>

<p>4.激动人心的时刻来了，广播之:</p>

<p><code>
bitcoin-cli sendrawtransaction  "0200000001b29453077a7adf4d08092d7beb20ca93afd797c98ca0afbd306c6487b2f0a6b9000000008a47304402202a51aa8eb0593a4b48880712c3ee70b7d6ca74ed313ef93e9c92489616587a2c022048c87fde75761e2a9cc9fef7dc8d0d9961ef1df89e22f88e5e3902567ec956f8014104fdf4907810a9f5d9462a1ae09feee5ab205d32798b0ffcc379442021f84c5bbfc891eb16b0faef4bef99ba6d522fb85470a20df730808e583778aa35c7af98f5ffffffff0126020000000000001976a914b1665e71006dbfbabb69cbcdc5717b11abdb89e888ac00000000"
</code></p>

<p>然后得到报错:</p>

<p><code>
error message:
66: min relay fee not met
</code></p>

<p>喵喵喵，怎么回事，我记得2016年的时候还是允许0.00000001的手续费的，比如下面这笔交易:</p>

<p><a href="https://blockchain.info/tx/d36a18d1fa4c6ccc4b90ab8a13dd3e55b396ac07bf7fbbee281c1025da2b86fc">https://blockchain.info/tx/d36a18d1fa4c6ccc4b90ab8a13dd3e55b396ac07bf7fbbee281c1025da2b86fc</a></p>

<p>5.没办法，我只能在createrawtransaction的时候手工指定手续费为0.000001，心痛啊，手续费是转账金额的20%~</p>

<p>然后又得到了这个错:</p>

<p><code>
mempool min fee not met
</code></p>

<p>怒了，又去翻了一下代码，还是由mempoolminfee 决定的啊，执行:</p>

<p><code>
bitcoin-cli getmempoolinfo
</code></p>

<p>现在是够的啊，搞不明白了；不行，再等别人就转走了，得争分夺秒啊2333</p>

<p>6.只能去找几个大矿池在线广播了，我无奈的先后使用了:</p>

<p><a href="https://btc.com/tools/tx/publish">https://btc.com/tools/tx/publish</a></p>

<p><a href="https://www.blockchain.com/btc/pushtx">https://www.blockchain.com/btc/pushtx</a></p>

<p><a href="https://live.blockcypher.com/btc/pushtx/">https://live.blockcypher.com/btc/pushtx/</a></p>

<p>统统失败，悲剧了；还测试出blockcypher有个500，它的后台没处理好，直接就挂掉了；btc.com是个鬼精灵，把所有的异常一把抓，就不告诉你出了啥错；值得表扬的是blockchain.info，完美显示了bitcoin core抛出的错误，嗯嗯嗯，记住，以后可以用极小值的手续费广播来测试这几个网站的后台bitcoind 实现版本，不要干坏事哦~~</p>

<p>7.万般无奈之下我将手续费用继续提高为0.000002，然后得到下面的报错:</p>

<p><code>
dust transaction
</code></p>

<p>一顿google之下发现0.15版本以后，bitcoin core的<a href="https://bitcoin.stackexchange.com/questions/10986/what-is-meant-by-bitcoin-dust">dust判定标准是546 satoshins</a>，这笔交易的金额正好处于这么一个微妙的位置。</p>

<p>8.一通操作之后，发现这笔钱是无论如何不能立即拿出来了；于是写个脚本暴力广播之，总有mempool size下来的时候吧，我幻想着，说不定能中奖呢23333</p>

<h4>结局</h4>

<p>昨晚有个土豪加上另外一个vout提走了，额，为了提0.00000555BTC，土豪动用了88BTC的vout作为陪练，并留下了0.00000400(高达90%) 的矿工费，交易记录在此:</p>

<p><a href="https://btc.com/d6d59802eb987fe96b9e827c07a1acff5e80ba5e9dae3f6f56f9ea427d98e585">https://btc.com/d6d59802eb987fe96b9e827c07a1acff5e80ba5e9dae3f6f56f9ea427d98e585</a></p>

<p>土豪，是在下输了。</p>

<p>这件事情挺有意思的，我相信还有很多自动机器人在hunter这几个大众抽奖地址，为了不到1分钱，真是<code>一通操作猛如虎，回头一看啥没有</code>。而且中间还有一笔流入，我放过了；作为傻逼的记录，我老老实实记一下。</p>

<p>现在minimum fee的行情是0.00001/KB，下次我得记好了，方便抽奖。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[真的存在独立随机事件吗]]></title>
    <link href="https://happy123.me/blog/2018/09/09/zhen-de-cun-zai-du-li-sui-ji-shi-jian-ma/"/>
    <updated>2018-09-09T10:29:21+08:00</updated>
    <id>https://happy123.me/blog/2018/09/09/zhen-de-cun-zai-du-li-sui-ji-shi-jian-ma</id>
    <content type="html"><![CDATA[<p>比特币的block hash value一般被认为是一个真随机值，也被各种dice机制用来做seed.</p>

<p>但是我老是在想：世界上存在真正的随机吗？或者再进一步，存在真正的<code>随机+独立</code>事件吗？</p>

<!-- more -->


<p>比如大刘的小说《镜子》就幻想了一种计算模型，从宇宙大爆炸那一刻开始，设定初始条件的组合再穷举，总能得到一个宇宙状态，这个宇宙就是我们现在所处的宇宙，你就能预测所有古往今来从诞生到毁灭的一切了；照这个道道来看，如果有一天能拥有无尽的算力，模拟预测亿万的宇宙都是可以的。</p>

<p>但是<code>无限</code>这个东西实在是个逻辑上的概念，物理世界里面存在<code>无限</code>吗？又是一个挠头的问题。</p>

<p>简而言之，因为物理世界种尚未发现这样一种东西，它的存在时间无限，计算能力无限，所以才会有<code>独立随机</code>这种概念。</p>

<p>所以我觉得概率这种东西是物理学上的东东，反而不能从数学上来认知。因为它的存在根本是无法证伪的。</p>

<p>正如相对论出世之前，牛顿三定律就能很好解释地球范围内的极大多数现象了；人们由于<code>时间+算力</code>的限制，只能从统计学上承认<code>独立随机事件</code>的存在，而无法在数学上去证明。</p>

<p>瞎扯这么多，主要是我想起来几年前做过的两件消遣事：</p>

<h4>抛硬币真的事一个随机事件吗？</h4>

<p>嗨嗨，我就是这么无聊。我确实拿着一个2005年的1元硬币抛了上万次，研究抛硬币这个东西是不是真的是个随机事件。说到这里我都佩服自己了:真的是傻逼到一定境界的人。</p>

<p>结论其实很无聊，其实抛个几百次就很容易看出来，至少在一个海拔水平面上，在一个刚性物体上面抛2005年铸造的1元硬币，不是随机事件，某一面向上的机率明显更大。而且与你抛硬币的方法有很大关系。</p>

<ul>
<li><p>2005年版的1元硬币如果立起来，重心并不是平均的，一面字、一面花，中心肯定会偏向比较重的那一面；这样的话，如果你把硬币立起来，用水平旋转的方法抛硬币，肯定会有一面的概率压倒性的大</p></li>
<li><p>如果是力量比较平均的人，抛个一万次并不会对身体造成太大负荷，结合硬币的重心不平均，这就造成了抛上去掉下来的抛法肯定也是有一面向上的概率大</p></li>
</ul>


<p>这个是经过实证的，至少我可以保证，在某地、我的某个状态下，抛某个硬币，我去赌博，是很容易下注的，我知道哪面向上的概率大。</p>

<p>所以一定要小心下次跟你赌抛硬币的人，他的硬币有可能做了手脚，或者他练习过手法，或者他知道这一版硬币的重心在何方。</p>

<p>当然，你也可以反对，说我抛硬币概率巴拉巴拉，或者说一万次样本太小巴拉巴拉，或者说你一个人抛样本太小巴拉巴拉~~，总之就是基于统计学的实验无法证伪。</p>

<p>再说说我的实验B</p>

<h4>存在完全随机的数字吗？</h4>

<p>大家普遍承认计算机产生的随机数是个伪随机数。为了解决这个问题，死宅们研究出了:</p>

<p><a href="https://www.random.org/">https://www.random.org/</a></p>

<p>这种接口，利用大气随机噪音来生成随机数；当然有很多人更相信量子态的随机，用量子发生器来产生随机数等等等等；</p>

<p>这些方法共同的问题还是无法证伪，谁能保证你是真随机呢？</p>

<p>幸好有 <a href="https://primedice.com/">https://primedice.com/</a> 这样的赌博网站，好吧，我羞耻的承认，我在它上面玩了上白万盘，当然是模拟盘。</p>

<p>因为这个网站是投入真金白银的BTC，并且基于各个用户的计算机产生随机数的，0.01的误差重复1000次也足以让你归零；从它成立至今还欣欣向荣的发展势头来看，它的随机数之随机，绝对要比一些嘴炮科学家来的靠谱；毕竟，你不随机，早就倒闭了。</p>

<p>让我作为一个赌了上白万盘的资深玩家告诉大家，用最简单的赌徒谬误方法：<code>赌大小，输了加倍赌</code>，这种办法取得的最好成绩是连续54胜(如果我没记错的话)，因为它提供的模拟盘最大资金量有限制，这就是极限了。我毫不怀疑如果投注的次数足够多，可以出现连续百胜千胜的机率也是有的。当然，你赢了也没有一点用，只要不收手，总会归零，赌徒谬误在绝对随机的情况下是百分百归零的，这个在数学上很容易证明。</p>

<p>同理可以推想，难道巴菲特不是特别幸运的，连赢1000次的那个人吗？</p>

<p>这个还是无法证伪。</p>

<p>赌徒谬误在primedice上面完全失败，恰恰说明相对于彩票的胜率，primedice的胜率明显更为公平。所以我毫不怀疑区块链技术将长期服务于投机赌博行业。在<code>是否存在完全的独立随机事件</code>这个问题无法证伪的前提下，区块链博彩纯粹是数学问题。</p>

<p>我对于primedice的感激，在于它真正提供了一个让你随机测试各种谬误策略的地方，当然所有的策略都是永动机，科学上都没啥依据，仅仅有娱乐价值。</p>

<h4>悲剧的是理性的赌徒从来很少</h4>

<p>如果一个人是完全理性的，那他永远都不会去赌。他会调查出门交通安全度，吃东西注重科学养生，然后不抽烟喝酒 ~~~，然而并没有什么卵用；</p>

<ul>
<li><p>我爷爷抽烟喝酒，天天管闲事，活了九十九</p></li>
<li><p>我注重养生、天天锻炼，从来不管闲事，被911飞机砸死了</p></li>
</ul>


<p>一个赌博的场子需要传奇，疯子，人们厌倦一潭死水；这就是随机、投资、婚姻、生活等等一切人生轨迹的现实投射。</p>

<p>统计学角度上来看，活着就是瞎折腾。</p>

<p>把一个人的一生按照时间切成一段一段，每一段的生活选择都是一种独立随机事件，人自以为是能掌控生活的，其实这么看来，命运是一种统计学上的东西。</p>

<p>我又想起来那个“阿基里斯悖论"。原来我觉得这个悖论有个很明显的解答，就是时间是有粒度的，不能无限分割，当阿基里斯距离乌龟达到时间的基本粒度时，就可以一步超越它了；换算成相对论的解释，就是空间也是有粒度的，当阿基里斯追赶乌龟，实际上是两个人的加速度不一样，尺缩效应强度不一，阿基里斯在空间上越来越接近乌龟，直到达到空间上的最小粒度，之后就超越它了。</p>

<p>其实还有一个统计学意义上的解释，就是阿基里斯追赶的每一小块时间，都充斥着独立随机事件，他不论赶上或赶不上乌龟，其实只是命运的摆弄罢了。</p>

<p>人生苦短，导致投机，真的很悲剧。</p>
]]></content>
  </entry>
  
</feed>
