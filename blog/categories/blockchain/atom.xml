<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blockchain | Living a Simple Life is a Happy Life]]></title>
  <link href="http://happy123.me/blog/categories/blockchain/atom.xml" rel="self"/>
  <link href="http://happy123.me/"/>
  <updated>2018-07-27T13:44:47+08:00</updated>
  <id>http://happy123.me/</id>
  <author>
    <name><![CDATA[memoryboxes]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[史上最可怕的赌局FOMO3D]]></title>
    <link href="http://happy123.me/blog/2018/07/27/shi-shang-zui-ke-pa-de-du-ju-fomo3d/"/>
    <updated>2018-07-27T03:32:39+08:00</updated>
    <id>http://happy123.me/blog/2018/07/27/shi-shang-zui-ke-pa-de-du-ju-fomo3d</id>
    <content type="html"><![CDATA[<p>人类骨子里面存在赌博的基因。从形形色色的资本市场，到我今天几点起床，好听一点，是一种概率的博弈，难听一点，就是赌博。</p>

<p>互联网伊始，在其他人纷纷吹嘘空中楼阁的时候，最先盈利的，是赌场。</p>

<p>区块链技术发展至今，落地的应用，无它，投机赌博尔。</p>

<p>从最初的SatoshiDice到primedice，到各种DApp的赌博应用，我想不久之后，澳门和拉斯维加斯会面临重大挑战。</p>

<p>第一次搞明白primedice和SatoshiDice的原理时，深深为之震撼，如此透明的博彩程序，在我看来已经到达赌博行业的顶尖水准了，后来者要超越，无非是内容上添砖加瓦，搞个美女营销之类的，技术上没啥改进余地了。</p>

<p>事实证明，Too Yong。人类在赌博业上的创新永无止境。</p>

<p>事实上，最近出来一个我认为史无前例的精巧，可怕，糅合了庞氏骗局，概率论，庄家，小白，顶级黑客，古典赌博术设计的区块链应用。而且，他非常坦诚，告诉你，我就是传销，就是骗局，你来了就是送我钱的，但还是让人欲罢不能。事实上，我不怕丢人，我也投了一点小钱在里面，我也是庞氏骗局的被洗脑者。所有读到这里的人，要高能预警提醒你，下面文章所有的内容，都是洗脑文，写这篇文章的人已经中毒了，您应该带着批判的思维去审视这些知识。</p>

<h4>再提醒一遍，这就是个骗局，创始团队也不讳言这是个骗局，他们明晃晃在官网wiki上，Twitter上提醒人们，我就是来骗你们的，不要上当。</h4>

<!-- more -->


<p>================================================================</p>

<p>这个游戏叫做Fomo3D，是建立在以太坊的智能合约基础上的一款DApp，是一个实盘的旁氏骗局，玩法综合了<code>传销+一元夺宝+博彩+资金盘+炒币</code> 的各样姿势，堪称区块链投机诈骗时代的集大成者。相比它，什么发行空气币，搞ICO的做法实在是弱爆了。</p>

<p>先讲讲它的开发团队，非常的有Geek范，他们首先很坦诚，称自己的游戏为“退出骗局（exit-scam）”，这个游戏的官方域名就是:</p>

<p><a href="https://exitscam.me/">https://exitscam.me/</a></p>

<p>而且他们自称是反区块链主义者，发明这个游戏出来就是让人认识到比特币、以太坊这些东西就是骗人的，是个巨大的博傻游戏，他们要劝人退出这个骗局。</p>

<p>劝你退出的方法很简单，就是他们发明了Fomo3D这个游戏骗光你的币，而且是正大光明的声明我就是来骗你的。</p>

<h4>Fomo3D啥意思?</h4>

<p>FOMO=fear of missing out，翻译成中文就是“怕错过”。这名字取得太应景了。实际上他们前面还做过一款叫做P3D（Proof of Weak Hands 3D）的庞氏类游戏，也曾一度引起轰动。当然，崩盘以前最后的一波投资者就比较难看。因此，这个游戏里面处处设法弄一些资金去给P3D填锅。</p>

<p>3D也是团队的一个调侃，代表除了单纯的旁氏，他们还搞出了另外两种骗你钱的姿势~~</p>

<p><strong>明知是骗人我还要投入其中，你太小看我的智商了吧，你以为我是P2P的大妈还是A股的韭菜啊，我傻啊~~~</strong></p>

<p>且让我们细细看来。</p>

<h2>规则：</h2>

<p>完整的说明请参见官方wiki：</p>

<p><a href="https://fomo3d.hostedwiki.co/pages/Fomo3D%20Explained">https://fomo3d.hostedwiki.co/pages/Fomo3D%20Explained</a></p>

<p>这个游戏其实是一个复合型的游戏。它的主合约有一千多行代码，还有几个辅助合约，已经算是相当复杂的了。从游戏来说，他包含几个机制：</p>

<h4>彩票：</h4>

<p>可以随时购买一注彩票；存在4种不太一样的一样的彩票（分成了四种模式，每种模式用一种动物指代：鲸鱼、蛇、牛、熊），每一种的返还方式略有区别，但是共用奖池；分大奖和小奖（随机空投），小奖实时开奖，实时结算；大奖奖池累计，目前累计到2w eth（1000w美金）</p>

<h4>一元拍卖：</h4>

<p>每个出价的人都得交一笔钱（这是一元拍卖和传统拍卖的最大区别）；每次有人出价，拍卖时间顺延30秒；如果拍卖时间结束，最后一个出价的人，获得商品&mdash;&mdash;这里没有真实商品，就是获得整个奖池；</p>

<h4>分红币：</h4>

<p>每个持有币的人可以从后面的入场资金获得固定分红；分红完全平均，每一个token（在下面我会交替使用token，币，key，F3D这几种说法，意思都一样）获得分红都是相等的，不含随机性；整盘游戏结束的时候还有一个最终分红；</p>

<h4>推荐/传销机制：</h4>

<p>每个人可以生成推广链接；其他人通过推荐链接入场，他的消费中10%直接奖励给推荐人；用户可以更换推荐人链接，如果不怎么做，他的后续消费将持续给别人提供奖励；</p>

<hr />

<p>相信这么说你可能要晕了，我们综合起来描述一下:</p>

<h4>首先合约提供了一种股份，他们称之为Key，你需要用Eth去买Key，拥有Key的人，就在游戏规定的时间内享有分红权，能源源不断的获取分红；</h4>

<ul>
<li><p>KEY的价格 = 0.000075 + 0.00000000015625*已有KEY的总量</p></li>
<li><p>获利 = （ 提现时KEY总量 -买入时KEY总量 ）* 分润率</p></li>
<li><p>Key不能卖，就是说你买了Key后只能握在手里</p></li>
</ul>


<p>这不就是尽早入场，尽早得利的老掉牙的骗局吗，最后一拨人接盘；有啥新鲜的？</p>

<h4>且慢，我们看到，除了分红之外，其实整个池子还是剩下近一半币的；所以除了庞氏，他还引入了另外一个模式，一元夺宝:</h4>

<ul>
<li>一轮游戏的时间限定为24小时，当游戏时间结束时，最后一个买key的人，可以独享奖池48%份额。</li>
</ul>


<p>也就是说，越到游戏快结束的最后1分钟，碰运气去博的人会越来越多，而且到时候奖池里面的数字会惊人的大，比如现在(2018-07-27 03:00:00 UTF+8)，池子里面已经积累20000+ 的eth了，超过一千万美元。</p>

<ul>
<li>当游戏时间&lt;24小时，每有一个人买一个key，游戏的时间会延长30秒。</li>
</ul>


<p>当游戏快结束时，大家都去博大奖，反而会让游戏的时间延长，理论上来说，这个延长会无穷无尽，所以这个游戏的第一局会持续到永远&hellip;&hellip;.，直到以太坊破灭</p>

<h4>为了让持有Key的人玩的更有乐子，他们还设计了一种空投机制，奖池会随机发币给key持有人，持有Key越多的人，越容易中奖</h4>

<h4>另外团队还有另外一款Token，就是空气币叫P3D，凡是持有P3D的人也能从奖池里面分一杯羹，这个P3D的设计是另外一个庞氏骗局，可以说是骗上加骗，强强联合了</h4>

<h4>最后的最后，为了找韭菜，他们还设计了常见的推荐机制</h4>

<p>我投0.1Eth，就可以得到一个推荐链接，凡是点击这个链接进来的人，我都能拿奖励；所以大家很快就会看到各类自媒体的科普文章中，夹带类似以下格式的链接，你点进去买就立即是一个合格的韭菜了:</p>

<p>```
<a href="https://exitscam.me/122334">https://exitscam.me/122334</a></p>

<p><a href="https://exitscam.me/ethxxxxx">https://exitscam.me/ethxxxxx</a></p>

<p><a href="https://exitscam.me/gogogogogog">https://exitscam.me/gogogogogog</a></p>

<p>~~~
```</p>

<p>看到这里，你是不是已经叹服它堪称史上集大成的诈骗机制了，这个产品经理洞悉了人性，发明了这个集传销，庞氏骗局，游戏，彩票，资金盘于一体的行为艺术，实在是应该去拉斯维加斯大展身手的；</p>

<p>当然，也许人家已经看明白区块链迟早会革掉传统赌博行业的命，早早投身这个大潮来了~~~</p>

<p>少年，你是不是急切的问，这个游戏咋玩啊，快给个教程链接我体验一下 233333~</p>

<h4>且慢，我都说了这是个骗人的局，而且，搞明白它的设计细节，进行概率测算之后，唯有四字形容：叹为观止。</h4>

<h2>规则细节</h2>

<p>传销的万古不变的铁则就是，越早入场，越早赚钱。索罗斯大爷用很艺术哲学的语言总结过:世界经济史是一部基于假象和谎言的连续剧。要想获得财富，做法就是认清其假象，投入其中，然后在假象被公众认识之前退出游戏。</p>

<p>那么我作为韭菜，入局这个游戏，期望获利，有哪些姿势呢？</p>

<h3>分红获利</h3>

<p>Fomo3D的key的价格是不断增加的，越早买越便宜。</p>

<p>第一个key的价格是7.5e-5，此后线性增长，大概到第50w个key的时候，价格翻一倍。50w，是不是看起来增长得已经非常慢了? 一定意义上，是的。不过请注意，现在已经卖出了3400w把key，所以价格目前已经翻了72x倍达到了5.54e-3。</p>

<p>用户买Key的时候可以选择自己的角色，可以看成是同股不同权，你可以选择自己喜欢的权力角色。简单按照官网的说明分为Whales, Bears, Bulls, Sneks，目前选Sneks的用户占有绝对优势，接近90%，下面我们来分析一下为什么:</p>

<p>首先我们看看每种角色的利益如何分配:</p>

<table>
<thead>
<tr>
<th>角色</th>
<th> 收入分配(划归奖池) </th>
<th> 实时分红 </th>
<th> 分给Pomo3D Token持有人 </th>
<th> 分给推荐人 </th>
<th> 空投小奖 </th>
<th> 捐赠开发团队</th>
</tr>
</thead>
<tbody>
<tr>
<td>whales </td>
<td> 50% </td>
<td> 30% </td>
<td> 6%  </td>
<td> 10% </td>
<td> 1%  </td>
<td> 3% </td>
</tr>
<tr>
<td>bears  </td>
<td> 43% </td>
<td> 43% </td>
<td> 0%  </td>
<td> 10% </td>
<td> 1%  </td>
<td> 3% </td>
</tr>
<tr>
<td>bulls  </td>
<td> 35% </td>
<td> 43% </td>
<td> 8%  </td>
<td> 10% </td>
<td> 1%  </td>
<td> 3% </td>
</tr>
<tr>
<td>sneks </td>
<td> 20% </td>
<td> 56% </td>
<td> 10%  </td>
<td> 10% </td>
<td> 1%  </td>
<td> 3% </td>
</tr>
</tbody>
</table>


<p>当游戏结束（倒计时结束时），并不是由赢家获得整个大奖奖池。这时候还会做一个最终分配。</p>

<table>
<thead>
<tr>
<th>角色</th>
<th> 大奖(只有一个赢家) </th>
<th> 下一轮 </th>
<th> 最后一次分红 </th>
<th> 分给Pomo3D Token持有人</th>
</tr>
</thead>
<tbody>
<tr>
<td>whales </td>
<td> 50% </td>
<td> 25% </td>
<td> 15%  </td>
<td> 10% </td>
</tr>
<tr>
<td>bears  </td>
<td> 50% </td>
<td> 25% </td>
<td> 25%  </td>
<td> 0% </td>
</tr>
<tr>
<td>bulls  </td>
<td> 50% </td>
<td> 10% </td>
<td> 30%  </td>
<td> 10% </td>
</tr>
<tr>
<td>sneks  </td>
<td> 50% </td>
<td> 10% </td>
<td> 20%  </td>
<td> 20%</td>
</tr>
</tbody>
</table>


<ul>
<li><p>whales: 此角色实时分红最少，更多的钱是分配给奖池，并且最终游戏结束时，会拿出最大的一部分分给下一轮，并且会拿出不小的比例分给Pomo 3D的玩家，它是庄家，它希望池子越来越大，吸纳的ETH越来越多</p></li>
<li><p>bears: 它是高玩，博的是最后的大奖，并且希望能一轮一轮玩下去，他没有动力去捧Pomo 3D这个空气币的场子</p></li>
<li><p>bulls: 它是尽可能博取高收益的那个人，他希望一把梭财务自由了就去会所，永不回头</p></li>
<li><p>sneks: 这是自以为最明智的那波人，他们认为这个游戏无穷无尽，没有终结的一天；他们纯粹把游戏当成庞氏骗局，并企图成为那个入场早的人，稳稳的分红来得利；大多数赌徒都以为自己比别人聪明，所以Sneks最多</p></li>
</ul>


<p><strong>需要注意的是，真实情况下，每个人的产品选择是不同的。即使大部分销量都是蛇提供的，只要最后的赢家是鲸，最终轮的奖金分配也会按照鲸的比例来进行。所以情况并不像上面的分析那么简单。</strong></p>

<h4>模拟计算</h4>

<p>早期的token发行量低，分红拿到你手上的比例更大：只有1个token时，你独享所有的分红（其实是你自己贡献的，也就是立刻拿回50%+的投入）。到了100个token时，即使分红一样，你只能拿到1%，这个区别显然是非常大的。</p>

<p>第一把key本身的价格是7.5e-5，立刻拿出4e-5来分红，因为此时只有一个人，所以全都归自己，这样瞬间就回收了54%的投资，太棒了！</p>

<p>第二把key的价格只略微上升，总的分红还是一样（这里没有列出来），但是因为已经有两个人在了，所以属于自己的分红瞬间减半（因素3）。两次累计，累计回收率81%。</p>

<p>第三把key，价格几乎不变，分红降低到初始的1/3，累计回收99%，已经几乎拿回所有的投入。</p>

<p>来个Excel很容易算明白，第一把key只用了3个key就达到100%的回收率。但是从100%到200%用了19把key（22左右），从200-300%用了130把key（150左右）。增速放满非常明显。</p>

<p>这个曲线不是渐近线，这是调和级数的求和，所以是不收敛的。用地球人的语言，就是说如果后面有无穷多人参加，第一个投资者的收益率理论上可以无限高。</p>

<p>当然，我们直到这条曲线的曲率是无限接近于0度的，分析前几轮已经没有意义了，应为现在发行的Key已经超过了3400w个；对于近期入场的用户来说，10次回收率已经低得可怜了 (有人测算小于0.000018%）。</p>

<p>为此，我们可以看2x回收率： 对于n时刻入场的投资者，分红n次（也就是持有到2xn时刻）的总回收率。这样虽然每次分红的金额随着1/n 不断的减小，但是分红次数n不断增加，可以让2x回收率基本保持在一个范围之内。</p>

<p>具体测算一下，对于3kw个key时候入场的人，就算翻倍增加到6kw个key，也才刚刚回本一半&hellip;&hellip;.这还是假设未来绝大部分投资者投会继续选择实时分红率最高的蛇产品。所以，我认为现在还想通过实时分红回本已经非常难了。</p>

<p>如果用投入总资金量来计算，现在总投入资金大概在95000个ETH，如果只依靠分红回本，就是总投入资金到达76000ETH的时候，你才能回本，大概需要资金增长7X，并且这个数字会越来越大。</p>

<p>没有错，这样我们就遇到了&lt;博弈论>里面的那个经典问题，一屋子里面的人从1-100猜一个数，最后平均每个人的猜测，最接近平均数66%的人获胜。理智的人就会无限压缩这个数，直到某个足够小的数。</p>

<p>然后放到这个游戏里来，我应该在总投入多少ETH的时候入场，才能称之为早期入场者呢？</p>

<p>已知场外总资金N，求入场总资金临界点n, n>N/7 就赔本；</p>

<p>已知N最大是1个亿，那么一定要在 总盘子 接近 1亿/7的时候撤退，大家都是理性人， 一定要在 1亿/7/7的时候撤退，~~~，最终这个数字是多少呢？</p>

<p>如果参与者都是理性人，那么你应该永远不入场!!</p>

<p>如果参与者都是耶鲁级别的精英，按照他们的百分比观点来推算，假设最后所有ETH持有人都被这个游戏的玩法覆盖到了，盘子148W的时候就是临界点。</p>

<p>如果参与者都是下海一把梭，唔，只有上帝才能知道答案了，也许上帝也算不出来~~~</p>

<p>当然有很多锁币的，厌恶风险的，并不是100%的ETH持有人都会参与，那么N是多少呢，最终n又会是多少呢？</p>

<p>少年，自己揣测吧。</p>

<h3>推荐获利</h3>

<p>事实上这个游戏11号上线，20号就开始井喷，一度达到以太坊所有交易的40%，真的有人号称一小时回本，一天回本；但是22号之后增长乏力，后来者看来已经是妥妥的韭菜了；来也匆匆，去也匆匆；好一个科技加持下的区块链骗局！</p>

<p>就这样吗？如果仅仅是这样，就是个平庸的庞氏骗局而已，我也不会称这个游戏可怕了。</p>

<p>相比动不动几千万的回本周期，10%的推荐/传销机制就非常有意思了。</p>

<p>而且这个游戏的这种“半锁定“的推荐人机制也显得非常可疑：</p>

<p>普通电商的推荐人奖励一般只针对一次特定的购买行为，不会与后续购买行为挂钩（不锁定）；</p>

<p>而传销的推荐人奖励是完全固定的（全锁定）；</p>

<p>这个游戏中采用了半锁定的方式：持续奖励，但是可以随时更换推荐人。</p>

<p>考虑到推荐机制的半锁定性，我认为待新鲜韭菜开发完毕以后，大家会进入“偷菜”的阶段：通过返利的方式把其他人的下线给抢过来。</p>

<p>合约代码虽然允许变更推荐人，但是不允许自己做自己的推荐人，是不是用心良苦。</p>

<p>现在各路神仙肯定纷纷开始科普文章，然后不经意间附上自己的链接小尾巴开始拉人头(注意哈，这篇文章出现的所有链接都是我瞎编的，不存在返利给我的情况，另外如果有巧合你点进去了，那个推荐也是我瞎写的，如有重复，纯属虚构)；将来肯定会出现类似淘宝客/阿里妈妈/返利网一样的F3D返利网站：</p>

<p>通过我的链接买入，我直接给你eth返利。这样你也不用折腾两个id这类的事情，直接来我这边统一返利。一旦形成一定的流量，不管是后面切平台，还是做二级市场，都有可能。</p>

<p>当分红不足以撑起这个庞氏的时候，推荐返利，作为人类已经重复了几千年的模式，会又为这个游戏注入很长时间的生命值</p>

<h3>炒作标的</h3>

<p>上面的一切分析，是建立在大伙作为Sneks其乐融融参与的基础上的；但是其实整个游戏中还有另外一股势力，就是被遗忘的POMO用户，他们享有池子的一部分分红权；POMO也是一个庞氏设计的空气币，在FOMO 3D的加持下，相信POMO Token的价格又是一轮水涨船高，那些自以为<code>更聪明</code>的韭菜们，肯定会对这个炒币游戏更为热衷；</p>

<p>另外，FOMO 3D的池子里，入局越早的参与者，是可以无限拿分红的，但是他们有些人性子比较急，说我想便宜点把这个分红权卖掉，有人接盘吗？ 好嘛，这不是可转债市场就蹦出来了嘛，人类的创造力就是这么开发的~~~</p>

<p>另外，ETH的流动性不断枯竭，会推高整个数字货币场子的市值吗？还是因为信心跌落相反之？</p>

<h3>最终大奖</h3>

<p>无论骗局怎样精巧，怎样美好，最终都会破灭的；FOMO 3D的可怕之处在结束时体现的淋漓尽致；</p>

<p>当最终所有能被忽悠的人都被忽悠进去了，游戏再也没有人接盘了，24小时倒计时一步步接近尾声，这时候吸引来了最后一拨人。</p>

<p>就是最后还持有ETH流动性，不动如山的那波人。</p>

<p>但是人性贪婪，没人例外。为了整个池子最后的50%大奖，他们最终会飞蛾扑火，注入最后一点ETH流动性，讽刺的是游戏的时间又会因此延长：</p>

<ul>
<li><p>在游戏的最初一分钟，是漫长的，无数赌客趋之若鹜，将这一分钟拉长</p></li>
<li><p>在游戏的最后一分钟，也是漫长的，无数聪明人飞蛾扑火，将这一分钟拉至永恒</p></li>
<li><p>我们说FOMO 3D是个可怕的游戏，因为历史上所有的骗局，或者因为信息不对称，或者因为信任度永远不能100%加成，即使国家背书，全民狂热，影响总是有限</p></li>
<li><p>FOMO 3D是目前诈骗行业的集大成者，他在坚不可摧的区块链之上，用坚不可摧的代码构筑坚不可摧的骗局；人类在其面前毫无还手之力，悲哉壮哉</p></li>
<li><p>我们老是说区块链技术重新定义了人们的信任方式，我更爱称这门技术只是放大了人性，不论是信任还是贪婪；整个社会的人性是守恒的，当你得到了更多的信任，也会释放相同的贪婪；区块链是人性的放大器</p></li>
</ul>


<h2>结局</h2>

<p>这个故事有以下几种结局:</p>

<ul>
<li>虽然FOMO 3D只有短短千行代码，但是我相信有很大的机率存在BUG，或者和以往一样，这场赌局会以一个意想不到的黑客事件结局</li>
</ul>


<p>目前已经有人指出了空投部分的漏洞，也有人说这是团队故意所为，自己判断吧:</p>

<p><a href="https://link.zhihu.com/?target=https%3A//www.reddit.com/r/ethereum/comments/916xni/how_to_pwn_fomo3d_a_beginners_guide/">https://link.zhihu.com/?target=https%3A//www.reddit.com/r/ethereum/comments/916xni/how_to_pwn_fomo3d_a_beginners_guide/</a></p>

<ul>
<li><p>我相信，最后一分钟，以太坊会有很大的机率不出块，也许是因为网络阻塞，也许是因为矿池联合，或者~~天怒人怨而已</p></li>
<li><p>这个游戏及其变种山寨不断抽取ETH流动性,交易量巨大阻塞网络，以太坊从此消亡</p></li>
<li><p>V神奋起反击，硬分叉以太坊；但是此种智能合约模式打开的潘多拉魔盒将会重创合约币，长久来看是对所谓打着区块链2.0，3.0旗号的币的利空</p></li>
<li><p>这个游戏Round1持续到地老天荒，后面有一批接盘侠在以太坊存在之年没有回本的希望，但是最后博大奖的欲望又诱使人们不断的投入小钱来维持这个游戏，庄家成为最大赢家； FOMO 3D作为人类历史上持续时间最长的经典诈骗笑傲江湖；作为人性贪婪的活教科书，活体实验室供社会学家们研究·测算；论文题目我都想好了:</p></li>
</ul>


<h4>人类生而善还是恶，善恶各占几何？</h4>

<p>参考资料:</p>

<p>合约地址:<a href="https://etherscan.io/address/0xA62142888ABa8370742bE823c1782D17A0389Da1">https://etherscan.io/address/0xA62142888ABa8370742bE823c1782D17A0389Da1</a></p>

<p>合约代码:<a href="https://etherscan.io/address/0xA62142888ABa8370742bE823c1782D17A0389Da1#code">https://etherscan.io/address/0xA62142888ABa8370742bE823c1782D17A0389Da1#code</a></p>

<p>数据分析:<a href="https://zhuanlan.zhihu.com/p/40571085">https://zhuanlan.zhihu.com/p/40571085</a></p>

<p>入门教程:<a href="https://zhuanlan.zhihu.com/p/40233591">https://zhuanlan.zhihu.com/p/40233591</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Strange Bitcoin Transaction]]></title>
    <link href="http://happy123.me/blog/2018/04/27/a-strange-bitcoin-transaction/"/>
    <updated>2018-04-27T14:24:30+08:00</updated>
    <id>http://happy123.me/blog/2018/04/27/a-strange-bitcoin-transaction</id>
    <content type="html"><![CDATA[<p>在之前的<a href="http://happy123.me/blog/2018/04/24/cryptocurrency-security/">谈谈比特币的地址安全问题</a>这篇文章中，我们谈到一个名为"LBC"的项目，这个项目通过暴力碰撞企图打捞到一些什么东西。</p>

<p>令人惊奇的是，他们真的碰到了几个地址。对他们最近发现的4个地址做了一下分析，发现了更让人惊奇的事情。</p>

<p>他们最近的四个发现是:</p>

<!-- more -->


<h4>2017-11-15 01:25:58 UTC</h4>

<ul>
<li><p>private key:0x236fb6d5ad1f43</p></li>
<li><p>hash160:cb66763cf7fde659869ae7f06884d9a0f879a092</p></li>
<li><p>address:1KYUv7nSvXx4642TKeuC2SNdTk326uUpFy</p></li>
<li><p>balance:0.054 BTC</p></li>
</ul>


<h4>2017-09-04 16:54:48 UTC</h4>

<ul>
<li><p>private key:0x180788e47e326c.</p></li>
<li><p>hash160:2f4870ef54fa4b048c1365d42594cc7d3d269551</p></li>
<li><p>address:15K1YKJMiJ4fpesTVUcByoz334rHmknxmT</p></li>
<li><p>balance: 0.053 BTC</p></li>
</ul>


<h4>2017-04-21 12:50:55 UTC</h4>

<ul>
<li><p>private key:0xefae164cb9e3c.</p></li>
<li><p>hash160: 36af659edbe94453f6344e920d143f1778653ae7</p></li>
<li><p>address:15z9c9sVpu6fwNiK7dMAFgMYSK4GqsGZim</p></li>
<li><p>balance:0.052 BTC</p></li>
</ul>


<h4>2017-04-05 02:23:00 UTC</h4>

<ul>
<li><p>private key:0x75070a1a009d4.</p></li>
<li><p>hash160:ef6419cffd7fad7027994354eb8efae223c2dbe7</p></li>
<li><p>address:1NpnQyZ7x24ud82b7WiRNvPm6N8bqGQnaS</p></li>
<li><p>balance:0.051 BTC</p></li>
</ul>


<h3>账户的余额依次递增，分别为0.051 &ndash;> 0.052 &ndash;> 0.053 &ndash;> 0.054</h3>

<h3>这也太凑巧了吧，为什么LBC的网站上没有小于0.051之前的数额呢</h3>

<p>一番追踪之后，我们发现了下面这笔交易:</p>

<p><a href="https://btc.com/08389f34c98c606322740c0be6a7125d9860bb8d5cb182c02f98461e5fa6cd15">https://btc.com/08389f34c98c606322740c0be6a7125d9860bb8d5cb182c02f98461e5fa6cd15</a></p>

<p>在2015年初的时候就有人对于比特币的安全模型提出过一个严肃的检验，他构造了以上这笔交易。</p>

<p>这笔交易的每个输出地址的私钥是这样构造的:</p>

<p><code>
000...........................00001
0000..........................000011
0000.........................0000111
0000........................00001000
0000.......................000010101
0000......................0000110001
0000.....................00001001100
0000....................000011100000
0000...................0000111010011
0000..................00001000000010
0000.................000010010000011
0000................0000101001111011
0000...............00001010001100000
0000..............000010100100110000
0000.............0000110100011110011
0000............00001100100100110110
0000...........000010111011001001111
0000..........0000110000100000001101
0000.........00001010111010010011111
0000........000011010010110001010101
0000.......0000110111010010100110100
0000......00001011011110010000001111
0000.....000010101010110111001010010
0000....0000110111000010101000000100
</code></p>

<p>第n个输出值为n mBTC，它的私匙(二进制)从右到第n位，也就是1，然后剩下的部分是随机的。</p>

<p>在我写这篇文章的时候，这批地址里面的余额已经被花费到了第54个地址，其实我猜就是LBC那帮人碰撞到的最大值(但是奇怪的是LBC的统计页面上没有包括这几个地址，我怀疑还有另外一个私下的类似LBC的组织在碰撞)</p>

<p>也许是币价飞涨，从第161个地址之后的币应该是被持有人花掉了。但是从55-160这个区间里面的币还安然无恙，这个价值加起来也不算小了。</p>

<p>这似乎是经过深思熟虑的~~也许是一个实验，看看在产出被拿走之前的时间。我认为这确实是个有趣的实验，比特币世界总不乏一些有趣的人。</p>

<p>少年，拿起你手中的显卡算力，2<sup>55</sup>级别的碰撞似乎不是那么遥不可及，让我们看看第55个幸运儿什么时候诞生。</p>

<ul>
<li>引用资料:</li>
</ul>


<p><a href="https://rya.nc/forensic-bitcoin-cracking.html">https://rya.nc/forensic-bitcoin-cracking.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[谈谈比特币的地址安全问题]]></title>
    <link href="http://happy123.me/blog/2018/04/24/cryptocurrency-security/"/>
    <updated>2018-04-24T21:38:13+08:00</updated>
    <id>http://happy123.me/blog/2018/04/24/cryptocurrency-security</id>
    <content type="html"><![CDATA[<h4>比特币的地址生成过程分为以下几个步骤:</h4>

<ol>
<li><p>随机生成一个32字节(256bits)的私钥k</p></li>
<li><p>采用椭圆曲线算法，以私钥k为起点，将其与曲线上预定的生成点G相乘以获得曲线上的另一点，也就是相应的公钥 K</p></li>
<li><p>进一步SHA256=>RIPEMD160 得到地址原始值A: A = RIPEMD160(SHA256(K))</p></li>
<li><p>对A进行Base58Check编码，添加前置版本号后Double SHA256取最后四个字节作为校验位，最后 Base58Check(前缀+Base58Check(A)+校验)得到最终地址</p></li>
</ol>


<p>整个过程中，私钥的生成空间有256bits，由私钥推出地址过程中，由于用到了RIPEMD160散列，所以生成空间共有160bits。</p>

<p>也就是说，去除版本号变化，某一类型的比特币地址最多有 2<sup>160</sup>个。</p>

<p>为什么有步骤3呢，不光增加了地址复杂度，还降低了HASH碰撞空间(从256bits降到160bits)。</p>

<p>所以中本聪的选择只是带来了不必要的复杂度和浪费吗？最后证明，答案是否定的。有另外一个非常好的理由去使用这个"公钥的哈希值"的地址结构：量子加密技术。量子计算机可以破解椭圆曲线数字签名算法（也就是说，给定一个公钥，量子计算机可以相当快速的找到对应的私钥），但它们不能相类似的逆转哈希算法（或者说他们可以，但是将需要花掉280个步骤来完成一个比特币地址的破解，这仍然是相当不可行的）。因此，如果你的比特币资金存放在一个你没有支出过的地址里（这意味着公钥是没有公开的），它们在量子计算机面前也就是安全的，至少在你把它们花掉之前。有理论上的途径可以让比特币完全免于量子计算机的威胁，但一个地址只是一个公钥的哈希值的事实，意味着一旦量子计算机真的出现了，在我们全面切换之前攻击者可以造成的损失要小得多。</p>

<p>请参考:</p>

<p><a href="http://www.8btc.com/satoshis-genius-unexpected-ways-in-which-bitcoin-dodged-some-cryptographic-bullet">http://www.8btc.com/satoshis-genius-unexpected-ways-in-which-bitcoin-dodged-some-cryptographic-bullet</a></p>

<!-- more -->


<h4>那么是不是我们就此可以高枕无忧了呢?</h4>

<p>2<sup>160</sup> 的散列空间，也足够对抗HASH碰撞了。现在计算机普遍的频率为GH/s的量级，假设我们有1EH/s的算力来碰撞，有效的比特币地址为10亿个，2<sup>160</sup>/2<sup>60</sup>/2<sup>30</sup>=2<sup>70</sup>，换算成年单位大概是10<sup>15</sup>年，假设宇宙年龄为100亿年，那么我们碰撞出一个私钥的时间为10<sup>15</sup>/10<sup>10</sup>=100000 个宇宙轮回，就是宇宙毁灭重生100,000次，我们有可能破解一个比特币私钥。</p>

<p>那么有人质疑比特币的安全性，我们大可以傲娇的说："没错，比特币在数学上不是绝对安全的。但我可以保证，它比这个宇宙安全的多。你相信明天宇宙就会爆炸吗？不相信的话，就相信比特币，洗洗安心睡吧。^_^"</p>

<h4>事实果真如此吗?</h4>

<p>让我们看一下<a href="https://lbc.cryptoguru.org/">Large Bitcoin Collider</a>这个项目。</p>

<p>该项目被称为大型比特币对撞机（LBC）。大型比特币对撞机尝试进行加密碰撞，它本质上证明了一个据称独特且随机的数字字符串可以重复。一路上爱好者们都在利用该项目的强大计算能力来尝试和破灭比特币的算法规则，最后打开其他人所拥有的比特币钱包，并有可能在里面拿走这些比特币。</p>

<p>是的，他们就是简单粗暴，他们试图从1穷举碰撞到2<sup>160</sup>来"打捞"比特币私钥。</p>

<p>我猜你肯定会说：哇咔咔，这帮傻小子，打捞到宇宙末日也不会有啥的</p>

<p>这个项目已经被贴上了很多标签：不可能，违法，毫无意义等等。</p>

<h4>一些让人惊奇的事情</h4>

<p>这个项目从2016年4月份开始运作，算力逐渐壮大到1GH/s的碰撞强度，到目前(2018-04)为止，发现了什么？</p>

<p>事实上他们刚刚碰撞到2<sup>54</sup>级别，按照道理来说他们离发现第一个私钥还相隔了xxxxxxx个宇宙轮回，事实呢？</p>

<p>他们共发现了16个有效的私钥，其中有4个地址是真实有效并且有余额的，共打捞了不到1个BTC。当然，他们花费的成本可能已经远远超过了所得，但是毕竟这对人们信奉的"比特币安全牢不可破"产生重击。</p>

<h4>他们骗人，用事先生成的地址来发送交易，然后蒙蔽世人</h4>

<p>事实上只要在bitcointalk.org论坛上仔细追踪一下这个帖子，就会发现这个项目完全是可信的，发起人十分严谨，记录了每次碰撞成功的结果，并且时间点上并无伪造的可能</p>

<p><a href="https://bitcointalk.org/index.php?topic=1573035.0">https://bitcointalk.org/index.php?topic=1573035.0</a></p>

<h4>哇，比特币被攻破了，我要赶紧卖卖卖</h4>

<p>事实上我们还是要强调比特币的设计比起这个星球上所有的银行和金融机构要安全的多，比起担心你的币，还是多担心一下你在人行总账上的资产账户吧。</p>

<h4>那这种事情怎么解释呢？</h4>

<ol>
<li><p>不是所有人的私钥都是那么"随机"，有理由相信，早期的一些玩家或者说一些钱包生成私钥的机制并不是那么完善，他们采用的熵源不够随机，造成私钥的值太小，被碰撞机发现了</p></li>
<li><p>总有一些人们，对于随机字符有莫名的恐惧，他们采用"脑钱包"来让自己更有控制感，相信我，大部分"脑钱包"的生成密语并不是多好，可能你会拿到一个被碰撞概率大得多的私钥。那些手头有大量"社工库"的坏小子们，是无法抵挡去碰撞攻击你的私钥的诱惑的</p></li>
<li><p>也许，我是说也许。数字货币的安全性设计是如此的健壮，健壮到人们忽视了最基本的问题：历史上从来没有哪一个系统能把所有东西都暴露在外，让人们随意碰撞攻击。这种时候，安全性最薄弱的环节还是在于人们的意识</p></li>
</ol>


<h4>那我们要如何保护自己呢？</h4>

<ol>
<li><p>尽量采用最新的，社区公认的健壮的钱包</p></li>
<li><p>如果你要用脑钱包，确认你明白其中的风险，并且自己最好对生成的私钥做一个安全评估</p></li>
<li><p>一个地址发送一笔转账后就更换地址</p></li>
</ol>


<h4>一些后续</h4>

<p>LBC这个项目遭受了很多人的误解和攻击。有的人认为这是一种偷盗行为。我得说，现有的法律在这里的确是盲点。</p>

<p>我在街上捡了一个钱包，大家都知道送去警局。</p>

<p>我在数字世界里面碰到了宇宙洪荒岁月亿万年一次的大奖，尽管这个奖励可能是从别的一个什么倒霉蛋那里拿来的，不过也没其他人知道，为什么不能看作是无主物品呢？为什么不看成是上天的眷顾呢？</p>

<h4>数字货币世界还是处于蛮荒狂野时代，不是那么多事情都是理所当然的;乔帮主的训诫要时时温习:饥渴求知，虚怀若愚(Stay Hungry, Stay Foolish)</h4>

<h4>少年，祝你好运</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Get Pubkey From a Transaction]]></title>
    <link href="http://happy123.me/blog/2018/04/22/how-to-get-pubkey-from-a-transaction/"/>
    <updated>2018-04-22T20:42:49+08:00</updated>
    <id>http://happy123.me/blog/2018/04/22/how-to-get-pubkey-from-a-transaction</id>
    <content type="html"><![CDATA[<p>比如<code>1HUBHMij46Hae75JPdWjeZ5Q7KaL7EFRSD</code>，这个地址，有转出过，如何得到公钥</p>

<p>原理很简单，但是实践起来比较烦：</p>

<!-- more -->


<p>首先我们找一下这个地址的随便一笔花费，比如这个:</p>

<p><a href="https://btc.com/0998ef06442994c147aec242e6973dfe3d512b05bde880793051a48bd021fc33">https://btc.com/0998ef06442994c147aec242e6973dfe3d512b05bde880793051a48bd021fc33</a></p>

<p>然后需要一个工具通过交易hash解析一下这笔交易</p>

<p>推荐用这个 <a href="https://github.com/libbitcoin/libbitcoin-explorer/wiki/Download-BX">libbitcoin/libbitcoin-explorer</a></p>

<p>执行</p>

<pre><code>bx-windows-x64-icu.exe fetch-tx 0998ef06442994c147aec242e6973dfe3d512b05bde880793051a48bd021fc33
</code></pre>

<p>得到了这笔交易解析后的完整输出:</p>

<p>```
transaction
{</p>

<pre><code>hash 0998ef06442994c147aec242e6973dfe3d512b05bde880793051a48bd021fc33
inputs
{
    input
    {
        address_hash b4a5d3960471568c3883046eec3b41b4953d61a1
        previous_output
        {
            hash 5fb9f0e7f520163e4afe0baa440fe93999273e95d9e345e0488a0802ed62674f
            index 0
        }
        script "[3045022100e4a4695ecbe6f507ec7181a2f321f489c7a3bd7eea032c75e4e1eba89174183c022019555aa917be6191db14da72e5c234a4b628f321b917ea334bcf9c122296cd5901] [044da006f958beba78ec54443df4a3f52237253f7ae8cbdb17dccf3feaa57f3126da0a0909f11998130c2d0e86a485f4e79ee466a183a476c432c68758ab9e630b]"
        sequence 4294967295
    }
}
lock_time 0
outputs
{
    output
    {
        address_hash c621cbfd778e6109e26046d96738c7af75e7b78b
        script "dup hash160 [c621cbfd778e6109e26046d96738c7af75e7b78b] equalverify checksig"
        value 43103
    }
}
version 1
</code></pre>

<p>}
```</p>

<p>注意script那一段，就是分成了两部分，前面一个中括号里面是签名，后面是公钥。</p>

<p>然后仔细看看这还是个老钱包生成的地址，没有压缩;</p>

<p>写个小脚本parse一下这个公钥，就可以看看是不是和地址对应啦:</p>

<p>```</p>

<h1>!/usr/bin/env python</h1>

<p>from hashlib import *
from base58 import *</p>

<p>def SHA256D(bstr):</p>

<pre><code>return sha256(sha256(bstr).digest()).digest()
</code></pre>

<p>def ConvertPKHToAddress(prefix, addr):</p>

<pre><code>data = prefix + addr
return b58encode(data + SHA256D(data)[:4])
</code></pre>

<p>def PubkeyToAddress(pubkey_hex):</p>

<pre><code>pubkey = bytearray.fromhex(pubkey_hex)
round1 = sha256(pubkey).digest()
h = new('ripemd160')
h.update(round1)
pubkey_hash = h.digest()
return ConvertPKHToAddress(b'\x00', pubkey_hash)
</code></pre>

<p>pubkey = &ldquo;044da006f958beba78ec54443df4a3f52237253f7ae8cbdb17dccf3feaa57f3126da0a0909f11998130c2d0e86a485f4e79ee466a183a476c432c68758ab9e630b&rdquo;
print(len(pubkey))
print(&ldquo;Address: %s&rdquo; % PubkeyToAddress(pubkey))
```</p>

<p>输出是这样的:</p>

<p><code>
130
Address: 1HUBHMij46Hae75JPdWjeZ5Q7KaL7EFRSD
</code></p>

<p>OK，打完收工。</p>

<p>如果一个地址只收币，从来没消费币，公钥是不会广播到网上的，所以这种地址拿不到公钥。一定要有花费，才能得到公钥。</p>

<p>所以有人推荐每次花费币之后就不要再用老地址了，每次交易都用新地址，避免将来出现什么黑科技（比如量子计算机之类的）穷举破解。 其实我觉的无所谓，大不了有人喊ECDSA挂了我再转移一下就行了，人家富豪榜里面都有好几个大佬也不在乎这点事。</p>

<p>PS:更新自打脸一下，我还是觉得每次交易用新地址是一定要做的，理论上HASH碰撞的概率有2<sup>160</sup>，但是我现在觉得这个量级不能简单的推算为1/2<sup>160</sup>；毕竟不是所有的钱包实现熵值都足够大。尽可能每次交易用新地址会增加碰撞库更新的难度。</p>

<h4>再强调一遍，每次交易用新地址是一个必须养成的习惯。</h4>

<p>另外公钥有两种形式：压缩与非压缩。一把私钥其实可以搞出两个地址哈。早期比特币均使用非压缩公钥，现大部分客户端已默认使用压缩公钥。早期openssl库的文档写的比较糙，导致Satoshi以为必须使用非压缩的完整公钥，后来大家发现其实公钥的左右两个32字节是有关联的，左侧(X)可以推出右侧(Y)的平方值，有左侧(X)就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Satoshi Craig Wright Is Being Sued for $10 Billion]]></title>
    <link href="http://happy123.me/blog/2018/04/22/satoshi-craig-wright-is-being-sued-for-10-dollars-billion/"/>
    <updated>2018-04-22T19:31:24+08:00</updated>
    <id>http://happy123.me/blog/2018/04/22/satoshi-craig-wright-is-being-sued-for-10-dollars-billion</id>
    <content type="html"><![CDATA[<p>啥也不说了，涉及百亿美元的案子，估计在人类历史上都能排前排了。</p>

<p>而且作为Bitcoin粉，我估计这个案子有可能在历史上空前绝后。涉及悬疑，天才，欺诈，巨额金钱，先知等等元素~~</p>

<p>留名之。</p>

<p><a href="https://www.coindesk.com/satoshi-craig-wright-sued-10-billion/">https://www.coindesk.com/satoshi-craig-wright-sued-10-billion/</a></p>

<p>另外我对这篇<a href="http://happy123.me/blog/2018/04/22/satoshi-craig-wright-is-being-sued-for-10-dollars-billion/">文章</a>用press.one进行了<a href="https://press.one/file/v?s=60db2f3ea40a25d28781c900af248523eb3c17024ce3ca18a42433035aff55524e4b2df76cfcef1466d38c4e23e4ab770d42359835b66d159cd5dd5099e0be260&amp;h=a93f5a68189ff4a9b14d9e592c4dd0a8a1b649d0191b58740d93ce10c0d055ec&amp;a=7e32e3deba87efcd35bc6d1ab355d85c50aa60bd&amp;v=2&amp;f=P1">签名:</a></p>

<!-- more -->


<h4>PS:附一下之前的总结</h4>

<p>2016-05更新:</p>

<p>=========================</p>

<p>参考<a href="http://8btc.com%E7%9A%84%E6%96%87%E7%AB%A0:">http://8btc.com%E7%9A%84%E6%96%87%E7%AB%A0:</a></p>

<p>为什么说这个中本聪是假的</p>

<p>Craig Wright 又在声明他是”中本聪”了.</p>

<p>“中本聪”给出的签名是：</p>

<p>```</p>

<pre><code>MEUCIQDBKn1Uly8m0UyzETObUSL4wYdBfd4ejvtoQfVcNCIK4AIgZmMsXNQWHvo6KDd2Tu6euEl13VTC3ihl6XUlhcU+fM4=
</code></pre>

<p>```</p>

<p>我们先对信息串进行base64解码，再转换成hex是：</p>

<p>```</p>

<pre><code>3045022100c12a7d54972f26d14cb311339b5122f8c187417dde1e8efb6841f55c34220ae0022066632c5cd4161efa3a2837764eee9eb84975dd54c2de2865e9752585c53e7cce
</code></pre>

<p>```</p>

<p>很遗憾，我们可以在交易ID：</p>

<p>```</p>

<pre><code>828ef3b079f9c23829c56fe86e85b4a69d9e06e5b54ea597eef5fb3ffef509fe
</code></pre>

<p>```</p>

<p>中找出这个签名。可通过：</p>

<p><a href="https://blockchain.info/tx/828ef3b079f9c23829c56fe86e85b4a69d9e06e5b54ea597eef5fb3ffef509fe?format=hex">https://blockchain.info/tx/828ef3b079f9c23829c56fe86e85b4a69d9e06e5b54ea597eef5fb3ffef509fe?format=hex</a></p>

<p>找到十六进制串的交易内容</p>

<p>然后搜索一下hex样子的签名，遗憾地发现，能在这个交易中找到这个签名。</p>

<p>但是令人疑惑的是GAVIN ANDRESEN为这位”中本聪”背书:</p>

<p><a href="http://gavinandresen.ninja/satoshi">http://gavinandresen.ninja/satoshi</a></p>

<p>Gavin不是一个无的放矢的人,他肯定是见到了更多的证据.</p>

<p>但是Craig Wright 又不对其他给定的文本签名来证明自己是中本聪,反而老是用这种神神遭遭的签名来忽悠大家……</p>

<p>卫平布莱恩特老师说,这球有意思啊…….</p>

<p>最后, 如果Craig Wright这个人是为了某种目的假冒的话,只能说他真是煞费苦心啊. 我不认为一个签名造假如此low的家伙能有这种能力.</p>

<p>但是他的一些行为如果算恶作剧的话,又未免太高段了,参考这里:</p>

<p><a href="https://www.zhihu.com/question/22199390/answer/76083139">https://www.zhihu.com/question/22199390/answer/76083139</a></p>

<p>不负责任的YY一下, Craig Wright肯定和真正的中本聪有某种关系,他在bitcoin诞生之初就了解参与过.</p>

<p>他不是bitcoin的发明者,因为种种迹象表明,他的技术能力实在太low了.</p>

<p>真正的中本聪可能是他的那个朋友:David Kleiman, 但他已经死了.</p>

<p>呵呵, 绝佳的侦探小说体裁啊.</p>

<p>2017-12-24更新</p>

<p>================</p>

<p>我在比特币开发论坛的早期帖子上发现了一个线索，在bitcoin release 0.1版本的时候，satoshi曾经自称自己:</p>

<pre><code>"The design supports a tremendous variety of possible transaction types that I designed years ago.  Escrow transactions, bonded contracts, third party arbitration, multi-party signature, etc.  If Bitcoin catches on in a big way, these are things we'll want to explore in the future, but they all had to be designed at the beginning to make sure they would be possible later."
</code></pre>

<p>这代表satoshi早期的职业生涯和金融、保险以及法务方面联系很紧密，同时看他的代码风格是老派C++的写法，有MS的味道 ：），然后看看 David Kleiman的个人主页，浮想联翩啊。</p>

<p>2018-04-22更新</p>

<p>==================</p>

<p>Craig Wright的案宗已经出来了:</p>

<p><a href="https://www.coindesk.com/satoshi-craig-wright-sued-10-billion/">https://www.coindesk.com/satoshi-craig-wright-sued-10-billion/</a></p>

<p>我觉得基本上可以确定猜测是对的，但是除了Craig Wright本人，真相的细节可能永远不会有人知道了。</p>

<p>现在最大的疑问就是100w币的私钥是谁控制着？</p>
]]></content>
  </entry>
  
</feed>
